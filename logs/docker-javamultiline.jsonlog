{"log":"Starting Java app com.touch.paylater.portalapi.application.PortalApiApplication listening on port 8130\n","stream":"stdout","time":"2021-12-09T00:20:46.732076365Z"}
{"log":"-XX:G1ConcRefinementThreads=2 -XX:GCDrainStackTargetSize=64 -XX:InitialHeapSize=134217728 -XX:MaxHeapSize=6871947673 -XX:MaxRAMPercentage=80.000000 -XX:+PrintCommandLineFlags -XX:+PrintFlagsFinal -XX:ReservedCodeCacheSize=251658240 -XX:+SegmentedCodeCache -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseG1GC \n","stream":"stdout","time":"2021-12-09T00:20:46.737950666Z"}
{"log":"[Global flags]\n","stream":"stdout","time":"2021-12-09T00:20:46.76771908Z"}
{"log":"      int ActiveProcessorCount                     = -1                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767762488Z"}
{"log":"    uintx AdaptiveSizeDecrementScaleFactor         = 4                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767767872Z"}
{"log":"    uintx AdaptiveSizeMajorGCDecayTimeScale        = 10                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767771106Z"}
{"log":"    uintx AdaptiveSizePolicyCollectionCostMargin   = 50                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767774048Z"}
{"log":"    uintx AdaptiveSizePolicyInitializingSteps      = 20                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767777664Z"}
{"log":"    uintx AdaptiveSizePolicyOutputInterval         = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767781413Z"}
{"log":"    uintx AdaptiveSizePolicyWeight                 = 10                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767786376Z"}
{"log":"    uintx AdaptiveSizeThroughPutPolicy             = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.76779017Z"}
{"log":"    uintx AdaptiveTimeWeight                       = 25                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767794218Z"}
{"log":"     bool AggressiveHeap                           = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767798223Z"}
{"log":"     bool AggressiveOpts                           = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.7678024Z"}
{"log":"     intx AliasLevel                               = 3                                      {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.76780638Z"}
{"log":"     bool AlignVector                              = false                                  {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767810312Z"}
{"log":"    ccstr AllocateHeapAt                           =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.76781397Z"}
{"log":"     intx AllocateInstancePrefetchLines            = 1                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767817597Z"}
{"log":"     intx AllocatePrefetchDistance                 = 192                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767821496Z"}
{"log":"     intx AllocatePrefetchInstr                    = 3                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.76782517Z"}
{"log":"     intx AllocatePrefetchLines                    = 4                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767829671Z"}
{"log":"     intx AllocatePrefetchStepSize                 = 64                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767833714Z"}
{"log":"     intx AllocatePrefetchStyle                    = 1                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767848791Z"}
{"log":"     bool AllowJNIEnvProxy                         = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767852888Z"}
{"log":"     bool AllowNonVirtualCalls                     = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.76785648Z"}
{"log":"     bool AllowParallelDefineClass                 = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767860378Z"}
{"log":"     bool AllowUserSignalHandlers                  = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767863636Z"}
{"log":"     bool AllowVectorizeOnDemand                   = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767867248Z"}
{"log":"     bool AlwaysActAsServerClassMachine            = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767870518Z"}
{"log":"     bool AlwaysCompileLoopMethods                 = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767874132Z"}
{"log":"     bool AlwaysLockClassLoader                    = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.76787823Z"}
{"log":"     bool AlwaysPreTouch                           = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767881931Z"}
{"log":"     bool AlwaysRestoreFPU                         = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767885888Z"}
{"log":"     bool AlwaysTenure                             = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767893017Z"}
{"log":"     intx ArrayCopyLoadStoreMaxElem                = 8                                      {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767896688Z"}
{"log":"     bool AssertOnSuspendWaitFailure               = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767912002Z"}
{"log":"     bool AssumeMP                                 = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.767963109Z"}
{"log":"     intx AutoBoxCacheMax                          = 128                                    {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768000744Z"}
{"log":"     intx BCEATraceLevel                           = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768037643Z"}
{"log":"     bool BackgroundCompilation                    = true                                   {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768077705Z"}
{"log":"   size_t BaseFootPrintEstimate                    = 268435456                                 {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768111111Z"}
{"log":"     intx BiasedLockingBulkRebiasThreshold         = 20                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768147487Z"}
{"log":"     intx BiasedLockingBulkRevokeThreshold         = 40                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.76819696Z"}
{"log":"     intx BiasedLockingDecayTime                   = 25000                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.76822153Z"}
{"log":"     intx BiasedLockingStartupDelay                = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768262222Z"}
{"log":"     bool BindGCTaskThreadsToCPUs                  = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768297861Z"}
{"log":"     bool BlockLayoutByFrequency                   = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768344132Z"}
{"log":"     intx BlockLayoutMinDiamondPercentage          = 20                                     {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768397583Z"}
{"log":"     bool BlockLayoutRotateLoops                   = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768414433Z"}
{"log":"     bool BranchOnRegister                         = false                                  {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768458195Z"}
{"log":"     bool BytecodeVerificationLocal                = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768493688Z"}
{"log":"     bool BytecodeVerificationRemote               = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768545596Z"}
{"log":"     bool C1OptimizeVirtualCallProfiling           = true                                   {C1 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768562043Z"}
{"log":"     bool C1ProfileBranches                        = true                                   {C1 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768605514Z"}
{"log":"     bool C1ProfileCalls                           = true                                   {C1 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768661487Z"}
{"log":"     bool C1ProfileCheckcasts                      = true                                   {C1 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768688754Z"}
{"log":"     bool C1ProfileInlinedCalls                    = true                                   {C1 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768743934Z"}
{"log":"     bool C1ProfileVirtualCalls                    = true                                   {C1 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768805277Z"}
{"log":"     bool C1UpdateMethodData                       = true                                   {C1 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768809522Z"}
{"log":"     intx CICompilerCount                          = 2                                         {product} {ergonomic}\n","stream":"stdout","time":"2021-12-09T00:20:46.768846149Z"}
{"log":"     bool CICompilerCountPerCPU                    = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768882257Z"}
{"log":"     bool CITime                                   = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768929069Z"}
{"log":"     bool CMSAbortSemantics                        = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.768964955Z"}
{"log":"    uintx CMSAbortablePrecleanMinWorkPerIteration  = 100                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769010469Z"}
{"log":"     intx CMSAbortablePrecleanWaitMillis           = 100                                    {manageable} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.76905006Z"}
{"log":"   size_t CMSBitMapYieldQuantum                    = 10485760                                  {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769078723Z"}
{"log":"    uintx CMSBootstrapOccupancy                    = 50                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.76913097Z"}
{"log":"     bool CMSClassUnloadingEnabled                 = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769174756Z"}
{"log":"    uintx CMSClassUnloadingMaxInterval             = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769208612Z"}
{"log":"     bool CMSCleanOnEnter                          = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769248592Z"}
{"log":"   size_t CMSConcMarkMultiple                      = 32                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769287356Z"}
{"log":"     bool CMSConcurrentMTEnabled                   = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769333853Z"}
{"log":"    uintx CMSCoordinatorYieldSleepCount            = 10                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769370887Z"}
{"log":"     bool CMSEdenChunksRecordAlways                = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769409969Z"}
{"log":"    uintx CMSExpAvgFactor                          = 50                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.7694567Z"}
{"log":"     bool CMSExtrapolateSweep                      = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769496443Z"}
{"log":"    uintx CMSIncrementalSafetyFactor               = 10                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769535049Z"}
{"log":"    uintx CMSIndexedFreeListReplenish              = 4                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.76958178Z"}
{"log":"     intx CMSInitiatingOccupancyFraction           = -1                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769624705Z"}
{"log":"    uintx CMSIsTooFullPercentage                   = 98                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769659063Z"}
{"log":"   double CMSLargeCoalSurplusPercent               = 0.950000                                  {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769711331Z"}
{"log":"   double CMSLargeSplitSurplusPercent              = 1.000000                                  {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769739223Z"}
{"log":"     bool CMSLoopWarn                              = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769784376Z"}
{"log":"    uintx CMSMaxAbortablePrecleanLoops             = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.76981905Z"}
{"log":"     intx CMSMaxAbortablePrecleanTime              = 5000                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769860015Z"}
{"log":"   size_t CMSOldPLABMax                            = 1024                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769898226Z"}
{"log":"   size_t CMSOldPLABMin                            = 16                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.76994004Z"}
{"log":"    uintx CMSOldPLABNumRefills                     = 4                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.769979147Z"}
{"log":"    uintx CMSOldPLABReactivityFactor               = 2                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770011457Z"}
{"log":"     bool CMSOldPLABResizeQuicker                  = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770052977Z"}
{"log":"    uintx CMSOldPLABToleranceFactor                = 4                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770104383Z"}
{"log":"     bool CMSPLABRecordAlways                      = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770135015Z"}
{"log":"     bool CMSParallelInitialMarkEnabled            = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770177751Z"}
{"log":"     bool CMSParallelRemarkEnabled                 = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77020709Z"}
{"log":"     bool CMSParallelSurvivorRemarkEnabled         = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770265592Z"}
{"log":"    uintx CMSPrecleanDenominator                   = 3                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770290113Z"}
{"log":"    uintx CMSPrecleanIter                          = 3                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770314838Z"}
{"log":"    uintx CMSPrecleanNumerator                     = 2                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770351375Z"}
{"log":"     bool CMSPrecleanRefLists1                     = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77039353Z"}
{"log":"     bool CMSPrecleanRefLists2                     = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770440613Z"}
{"log":"     bool CMSPrecleanSurvivors1                    = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770468284Z"}
{"log":"     bool CMSPrecleanSurvivors2                    = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770505854Z"}
{"log":"    uintx CMSPrecleanThreshold                     = 1000                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77053981Z"}
{"log":"     bool CMSPrecleaningEnabled                    = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770612797Z"}
{"log":"     bool CMSPrintChunksInDump                     = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770626762Z"}
{"log":"     bool CMSPrintObjectsInDump                    = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770662141Z"}
{"log":"    uintx CMSRemarkVerifyVariant                   = 1                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770709941Z"}
{"log":"     bool CMSReplenishIntermediate                 = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770731981Z"}
{"log":"   size_t CMSRescanMultiple                        = 32                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770756759Z"}
{"log":"    uintx CMSSamplingGrain                         = 16384                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770806543Z"}
{"log":"     bool CMSScavengeBeforeRemark                  = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770850992Z"}
{"log":"    uintx CMSScheduleRemarkEdenPenetration         = 50                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.7708668Z"}
{"log":"   size_t CMSScheduleRemarkEdenSizeThreshold       = 2097152                                   {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770917725Z"}
{"log":"    uintx CMSScheduleRemarkSamplingRatio           = 5                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770942981Z"}
{"log":"   double CMSSmallCoalSurplusPercent               = 1.050000                                  {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.770969749Z"}
{"log":"   double CMSSmallSplitSurplusPercent              = 1.100000                                  {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771006416Z"}
{"log":"     bool CMSSplitIndexedFreeListBlocks            = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771060761Z"}
{"log":"     intx CMSTriggerInterval                       = -1                                     {manageable} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771082767Z"}
{"log":"    uintx CMSTriggerRatio                          = 80                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771163061Z"}
{"log":"     intx CMSWaitDuration                          = 2000                                   {manageable} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771170779Z"}
{"log":"    uintx CMSWorkQueueDrainThreshold               = 10                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771194228Z"}
{"log":"     bool CMSYield                                 = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771247412Z"}
{"log":"    uintx CMSYieldSleepCount                       = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771273951Z"}
{"log":"   size_t CMSYoungGenPerWorker                     = 67108864                               {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77133247Z"}
{"log":"    uintx CMS_FLSPadding                           = 1                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771403785Z"}
{"log":"    uintx CMS_FLSWeight                            = 75                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771418955Z"}
{"log":"    uintx CMS_SweepPadding                         = 1                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771452843Z"}
{"log":"    uintx CMS_SweepTimerThresholdMillis            = 10                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771479739Z"}
{"log":"    uintx CMS_SweepWeight                          = 75                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771536703Z"}
{"log":"     bool CalculateClassFingerprint                = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771562205Z"}
{"log":"     bool CheckJNICalls                            = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771587831Z"}
{"log":"     bool ClassUnloading                           = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771623048Z"}
{"log":"     bool ClassUnloadingWithConcurrentMark         = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771665746Z"}
{"log":"     bool ClipInlining                             = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771690456Z"}
{"log":"    uintx CodeCacheExpansionSize                   = 65536                                  {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771748467Z"}
{"log":"     bool CompactFields                            = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771802163Z"}
{"log":"     bool CompactStrings                           = true                                   {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771833678Z"}
{"log":"     intx CompilationPolicyChoice                  = 2                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771857916Z"}
{"log":"ccstrlist CompileCommand                           =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77197234Z"}
{"log":"    ccstr CompileCommandFile                       =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771978691Z"}
{"log":"ccstrlist CompileOnly                              =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77198231Z"}
{"log":"     intx CompileThreshold                         = 10000                                  {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.771989181Z"}
{"log":"   double CompileThresholdScaling                  = 1.000000                                  {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772020378Z"}
{"log":"     bool CompilerThreadHintNoPreempt              = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772070705Z"}
{"log":"     intx CompilerThreadPriority                   = -1                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772083245Z"}
{"log":"     intx CompilerThreadStackSize                  = 1024                                   {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772137007Z"}
{"log":"   size_t CompressedClassSpaceSize                 = 1073741824                                {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772172502Z"}
{"log":"     uint ConcGCThreads                            = 1                                         {product} {ergonomic}\n","stream":"stdout","time":"2021-12-09T00:20:46.772199685Z"}
{"log":"     intx ConditionalMoveLimit                     = 3                                   {C2 pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772232352Z"}
{"log":"     intx ContendedPaddingWidth                    = 128                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772263615Z"}
{"log":"     bool CrashOnOutOfMemoryError                  = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77231701Z"}
{"log":"     bool CreateCoredumpOnCrash                    = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772340614Z"}
{"log":"     bool CriticalJNINatives                       = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772377047Z"}
{"log":"     bool DTraceAllocProbes                        = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772419738Z"}
{"log":"     bool DTraceMethodProbes                       = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772465094Z"}
{"log":"     bool DTraceMonitorProbes                      = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772477605Z"}
{"log":"     bool Debugging                                = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77250354Z"}
{"log":"     bool DeoptimizeRandom                         = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.7725633Z"}
{"log":"     bool DisableAttachMechanism                   = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772573811Z"}
{"log":"     bool DisableExplicitGC                        = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772604243Z"}
{"log":"     bool DisplayVMOutputToStderr                  = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772679109Z"}
{"log":"     bool DisplayVMOutputToStdout                  = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772686409Z"}
{"log":"     bool DoEscapeAnalysis                         = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772726753Z"}
{"log":"     bool DoReserveCopyInSuperWord                 = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772753145Z"}
{"log":"     bool DontCompileHugeMethods                   = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772803936Z"}
{"log":"     bool DontYieldALot                            = false                                  {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772865111Z"}
{"log":"    ccstr DumpLoadedClassList                      =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77287092Z"}
{"log":"     bool DumpReplayDataOnError                    = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772919048Z"}
{"log":"     bool DumpSharedSpaces                         = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772949952Z"}
{"log":"     bool EagerXrunInit                            = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.772982988Z"}
{"log":"     intx EliminateAllocationArraySizeLimit        = 64                                     {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773018561Z"}
{"log":"     bool EliminateAllocations                     = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77305679Z"}
{"log":"     bool EliminateAutoBox                         = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773104869Z"}
{"log":"     bool EliminateLocks                           = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773141202Z"}
{"log":"     bool EliminateNestedLocks                     = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773187599Z"}
{"log":"     bool EnableContended                          = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773241778Z"}
{"log":"     bool EnableDynamicAgentLoading                = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773261111Z"}
{"log":"   size_t ErgoHeapSizeLimit                        = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77330746Z"}
{"log":"    ccstr ErrorFile                                =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773359852Z"}
{"log":"     bool ErrorFileToStderr                        = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773384088Z"}
{"log":"     bool ErrorFileToStdout                        = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773425615Z"}
{"log":" uint64_t ErrorLogTimeout                          = 120                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773477171Z"}
{"log":"    ccstr ErrorReportServer                        =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773502355Z"}
{"log":"   double EscapeAnalysisTimeout                    = 20.000000                              {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773528168Z"}
{"log":"     bool EstimateArgEscape                        = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773557183Z"}
{"log":"     bool ExecutingUnitTests                       = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773613871Z"}
{"log":"     bool ExitOnOutOfMemoryError                   = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773639794Z"}
{"log":"     bool ExplicitGCInvokesConcurrent              = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773698611Z"}
{"log":"     bool ExtendedDTraceProbes                     = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773722965Z"}
{"log":"     bool ExtensiveErrorReports                    = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773750728Z"}
{"log":"    ccstr ExtraSharedClassListFile                 =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773768241Z"}
{"log":"     bool FLSAlwaysCoalesceLarge                   = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773803118Z"}
{"log":"    uintx FLSCoalescePolicy                        = 2                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773836887Z"}
{"log":"   double FLSLargestBlockCoalesceProximity         = 0.990000                                  {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773892659Z"}
{"log":"     bool FailOverToOldVerifier                    = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773904199Z"}
{"log":"     intx FieldsAllocationStyle                    = 1                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773953174Z"}
{"log":"     bool FilterSpuriousWakeups                    = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.773997312Z"}
{"log":"     bool FlightRecorder                           = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774025758Z"}
{"log":"    ccstr FlightRecorderOptions                    =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774050071Z"}
{"log":"     bool ForceNUMA                                = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774076853Z"}
{"log":"     bool ForceTimeHighResolution                  = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774120432Z"}
{"log":"     intx FreqInlineSize                           = 325                                    {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774155799Z"}
{"log":"   double G1ConcMarkStepDurationMillis             = 10.000000                                 {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774186487Z"}
{"log":"    uintx G1ConcRSHotCardLimit                     = 4                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774235794Z"}
{"log":"   size_t G1ConcRSLogCacheSize                     = 10                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774287324Z"}
{"log":"   size_t G1ConcRefinementGreenZone                = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774314026Z"}
{"log":"   size_t G1ConcRefinementRedZone                  = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774343852Z"}
{"log":"    uintx G1ConcRefinementServiceIntervalMillis    = 300                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774379644Z"}
{"log":"     uint G1ConcRefinementThreads                  = 2                                         {product} {ergonomic}\n","stream":"stdout","time":"2021-12-09T00:20:46.774437962Z"}
{"log":"   size_t G1ConcRefinementThresholdStep            = 2                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774487422Z"}
{"log":"   size_t G1ConcRefinementYellowZone               = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774509544Z"}
{"log":"    uintx G1ConfidencePercent                      = 50                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774536348Z"}
{"log":"   size_t G1HeapRegionSize                         = 1048576                                   {product} {ergonomic}\n","stream":"stdout","time":"2021-12-09T00:20:46.774599442Z"}
{"log":"    uintx G1HeapWastePercent                       = 5                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774625141Z"}
{"log":"    uintx G1MixedGCCountTarget                     = 8                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.7746645Z"}
{"log":"     intx G1RSetRegionEntries                      = 256                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774680209Z"}
{"log":"   size_t G1RSetScanBlockSize                      = 64                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774715898Z"}
{"log":"     intx G1RSetSparseRegionEntries                = 4                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77476337Z"}
{"log":"     intx G1RSetUpdatingPauseTimePercent           = 10                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774783489Z"}
{"log":"     uint G1RefProcDrainInterval                   = 1000                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774830076Z"}
{"log":"    uintx G1ReservePercent                         = 10                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.7748556Z"}
{"log":"    uintx G1SATBBufferEnqueueingThresholdPercent   = 60                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774899913Z"}
{"log":"   size_t G1SATBBufferSize                         = 1024                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774927848Z"}
{"log":"   size_t G1UpdateBufferSize                       = 256                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774950884Z"}
{"log":"     bool G1UseAdaptiveConcRefinement              = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.774990055Z"}
{"log":"     bool G1UseAdaptiveIHOP                        = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775043302Z"}
{"log":"    uintx GCDrainStackTargetSize                   = 64                                        {product} {ergonomic}\n","stream":"stdout","time":"2021-12-09T00:20:46.775057593Z"}
{"log":"    uintx GCHeapFreeLimit                          = 2                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775116124Z"}
{"log":"    uintx GCLockerEdenExpansionPercent             = 5                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775135502Z"}
{"log":"     bool GCLockerInvokesConcurrent                = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775170136Z"}
{"log":"    uintx GCPauseIntervalMillis                    = 201                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775211993Z"}
{"log":"     uint GCTaskTimeStampEntries                   = 200                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775251383Z"}
{"log":"    uintx GCTimeLimit                              = 98                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775281144Z"}
{"log":"    uintx GCTimeRatio                              = 12                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775321883Z"}
{"log":"   size_t HeapBaseMinAddress                       = 2147483648                             {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775395473Z"}
{"log":"     bool HeapDumpAfterFullGC                      = false                                  {manageable} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775407968Z"}
{"log":"     bool HeapDumpBeforeFullGC                     = false                                  {manageable} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775446027Z"}
{"log":"     bool HeapDumpOnOutOfMemoryError               = false                                  {manageable} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775494533Z"}
{"log":"    ccstr HeapDumpPath                             =                                        {manageable} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775542158Z"}
{"log":"    uintx HeapFirstMaximumCompactionCount          = 3                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775569652Z"}
{"log":"    uintx HeapMaximumCompactionInterval            = 20                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775594097Z"}
{"log":"    uintx HeapSearchSteps                          = 3                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775635345Z"}
{"log":"   size_t HeapSizePerGCThread                      = 43620760                                  {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775678263Z"}
{"log":"     bool IgnoreEmptyClassPaths                    = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775698019Z"}
{"log":"     bool IgnoreUnrecognizedVMOptions              = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.7757444Z"}
{"log":"    uintx IncreaseFirstTierCompileThresholdAt      = 50                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775767091Z"}
{"log":"     bool IncrementalInline                        = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775800758Z"}
{"log":"   size_t InitialBootClassLoaderMetaspaceSize      = 4194304                                   {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775833694Z"}
{"log":"    uintx InitialCodeCacheSize                     = 2555904                                {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775858563Z"}
{"log":"   size_t InitialHeapSize                          = 134217728                                 {product} {ergonomic}\n","stream":"stdout","time":"2021-12-09T00:20:46.775895627Z"}
{"log":"    uintx InitialRAMFraction                       = 64                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775938263Z"}
{"log":"   double InitialRAMPercentage                     = 1.562500                                  {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.775966215Z"}
{"log":"    uintx InitialSurvivorRatio                     = 8                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776016326Z"}
{"log":"    uintx InitialTenuringThreshold                 = 7                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776050371Z"}
{"log":"    uintx InitiatingHeapOccupancyPercent           = 45                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776099712Z"}
{"log":"     bool Inline                                   = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776131221Z"}
{"log":"    ccstr InlineDataFile                           =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776156938Z"}
{"log":"     intx InlineSmallCode                          = 2000                                   {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776218694Z"}
{"log":"     bool InlineSynchronizedMethods                = true                                   {C1 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77622609Z"}
{"log":"     bool InsertMemBarAfterArraycopy               = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776262996Z"}
{"log":"     intx InteriorEntryAlignment                   = 16                                  {C2 pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776303288Z"}
{"log":"     intx InterpreterProfilePercentage             = 33                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776360349Z"}
{"log":"     bool JavaMonitorsInStackTrace                 = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776388727Z"}
{"log":"     intx JavaPriority10_To_OSPriority             = -1                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776421121Z"}
{"log":"     intx JavaPriority1_To_OSPriority              = -1                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77644704Z"}
{"log":"     intx JavaPriority2_To_OSPriority              = -1                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776481163Z"}
{"log":"     intx JavaPriority3_To_OSPriority              = -1                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77650937Z"}
{"log":"     intx JavaPriority4_To_OSPriority              = -1                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77653358Z"}
{"log":"     intx JavaPriority5_To_OSPriority              = -1                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77658855Z"}
{"log":"     intx JavaPriority6_To_OSPriority              = -1                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776613946Z"}
{"log":"     intx JavaPriority7_To_OSPriority              = -1                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776713509Z"}
{"log":"     intx JavaPriority8_To_OSPriority              = -1                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776719094Z"}
{"log":"     intx JavaPriority9_To_OSPriority              = -1                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776746923Z"}
{"log":"     bool LIRFillDelaySlots                        = false                               {C1 pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776763034Z"}
{"log":"   size_t LargePageHeapSizeThreshold               = 134217728                                 {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776797319Z"}
{"log":"   size_t LargePageSizeInBytes                     = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776840991Z"}
{"log":"     intx LiveNodeCountInliningCutoff              = 40000                                  {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776873404Z"}
{"log":"     bool LoadExecStackDllInVMThread               = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776910876Z"}
{"log":"     intx LoopMaxUnroll                            = 16                                     {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77695623Z"}
{"log":"     intx LoopOptsCount                            = 43                                     {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.776993857Z"}
{"log":"     intx LoopPercentProfileLimit                  = 30                                  {C2 pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777021073Z"}
{"log":"    uintx LoopStripMiningIter                      = 1000                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777055489Z"}
{"log":"    uintx LoopStripMiningIterShortLoop             = 100                                    {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777084186Z"}
{"log":"     intx LoopUnrollLimit                          = 60                                  {C2 pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777121724Z"}
{"log":"     intx LoopUnrollMin                            = 4                                      {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777154526Z"}
{"log":"     bool LoopUnswitching                          = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777186953Z"}
{"log":"     bool ManagementServer                         = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777219845Z"}
{"log":"   size_t MarkStackSize                            = 4194304                                   {product} {ergonomic}\n","stream":"stdout","time":"2021-12-09T00:20:46.777252486Z"}
{"log":"   size_t MarkStackSizeMax                         = 16777216                                  {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77728681Z"}
{"log":"     uint MarkSweepAlwaysCompactCount              = 4                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777331299Z"}
{"log":"    uintx MarkSweepDeadRatio                       = 5                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77735914Z"}
{"log":"     intx MaxBCEAEstimateLevel                     = 5                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777392041Z"}
{"log":"     intx MaxBCEAEstimateSize                      = 150                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777426116Z"}
{"log":" uint64_t MaxDirectMemorySize                      = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777460187Z"}
{"log":"     bool MaxFDLimit                               = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777494769Z"}
{"log":"    uintx MaxGCMinorPauseMillis                    = 18446744073709551615                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777522025Z"}
{"log":"    uintx MaxGCPauseMillis                         = 200                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777556174Z"}
{"log":"    uintx MaxHeapFreeRatio                         = 70                                     {manageable} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777586526Z"}
{"log":"   size_t MaxHeapSize                              = 6872367104                                {product} {ergonomic}\n","stream":"stdout","time":"2021-12-09T00:20:46.777619194Z"}
{"log":"     intx MaxInlineLevel                           = 15                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777652914Z"}
{"log":"     intx MaxInlineSize                            = 35                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777689946Z"}
{"log":"     intx MaxJNILocalCapacity                      = 65536                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777723858Z"}
{"log":"     intx MaxJavaStackTraceDepth                   = 1024                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777751546Z"}
{"log":"     intx MaxJumpTableSize                         = 65000                                  {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777785183Z"}
{"log":"     intx MaxJumpTableSparseness                   = 5                                      {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777819109Z"}
{"log":"     intx MaxLabelRootDepth                        = 1100                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777849503Z"}
{"log":"     intx MaxLoopPad                               = 11                                     {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777881949Z"}
{"log":"   size_t MaxMetaspaceExpansion                    = 5451776                                   {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77792103Z"}
{"log":"    uintx MaxMetaspaceFreeRatio                    = 70                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777946466Z"}
{"log":"   size_t MaxMetaspaceSize                         = 18446744073709547520                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.777978803Z"}
{"log":"   size_t MaxNewSize                               = 4123000832                                {product} {ergonomic}\n","stream":"stdout","time":"2021-12-09T00:20:46.778011352Z"}
{"log":"     intx MaxNodeLimit                             = 80000                                  {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778044218Z"}
{"log":" uint64_t MaxRAM                                   = 137438953472                           {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778077875Z"}
{"log":"    uintx MaxRAMFraction                           = 4                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778107821Z"}
{"log":"   double MaxRAMPercentage                         = 80.000000                                 {product} {command line}\n","stream":"stdout","time":"2021-12-09T00:20:46.778147646Z"}
{"log":"     intx MaxRecursiveInlineLevel                  = 1                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77817801Z"}
{"log":"    uintx MaxTenuringThreshold                     = 15                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778208227Z"}
{"log":"     intx MaxTrivialSize                           = 6                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778244604Z"}
{"log":"     intx MaxVectorSize                            = 64                                     {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778275141Z"}
{"log":"   size_t MetaspaceSize                            = 21807104                               {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778314076Z"}
{"log":"     bool MethodFlushing                           = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778348255Z"}
{"log":"   size_t MinHeapDeltaBytes                        = 1048576                                   {product} {ergonomic}\n","stream":"stdout","time":"2021-12-09T00:20:46.778379004Z"}
{"log":"    uintx MinHeapFreeRatio                         = 40                                     {manageable} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77841161Z"}
{"log":"     intx MinInliningThreshold                     = 250                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778443756Z"}
{"log":"     intx MinJumpTableSize                         = 10                                  {C2 pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778474221Z"}
{"log":"   size_t MinMetaspaceExpansion                    = 339968                                    {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778506795Z"}
{"log":"    uintx MinMetaspaceFreeRatio                    = 40                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778541795Z"}
{"log":"    uintx MinRAMFraction                           = 2                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778573942Z"}
{"log":"   double MinRAMPercentage                         = 50.000000                                 {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77860491Z"}
{"log":"    uintx MinSurvivorRatio                         = 3                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778637352Z"}
{"log":"   size_t MinTLABSize                              = 2048                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778669946Z"}
{"log":"     intx MonitorBound                             = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778704239Z"}
{"log":"     bool MonitorInUseLists                        = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778737745Z"}
{"log":"     intx MultiArrayExpandLimit                    = 6                                      {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778770384Z"}
{"log":"    uintx NUMAChunkResizeWeight                    = 20                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778803026Z"}
{"log":"   size_t NUMAInterleaveGranularity                = 2097152                                   {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77883354Z"}
{"log":"    uintx NUMAPageScanRate                         = 256                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778863963Z"}
{"log":"   size_t NUMASpaceResizeRate                      = 1073741824                                {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778897759Z"}
{"log":"     bool NUMAStats                                = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778924959Z"}
{"log":"    ccstr NativeMemoryTracking                     = off                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.7789614Z"}
{"log":"     bool NeedsDeoptSuspend                        = false                                  {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.778988882Z"}
{"log":"     bool NeverActAsServerClassMachine             = false                                  {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779020728Z"}
{"log":"     bool NeverTenure                              = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779059505Z"}
{"log":"    uintx NewRatio                                 = 2                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779086929Z"}
{"log":"   size_t NewSize                                  = 1363144                                   {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779120821Z"}
{"log":"   size_t NewSizeThreadIncrease                    = 5320                                   {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779159936Z"}
{"log":"     intx NmethodSweepActivity                     = 10                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779187219Z"}
{"log":"     intx NodeLimitFudgeFactor                     = 2000                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779226292Z"}
{"log":"    uintx NonNMethodCodeHeapSize                   = 5825164                                {pd product} {ergonomic}\n","stream":"stdout","time":"2021-12-09T00:20:46.779257033Z"}
{"log":"    uintx NonProfiledCodeHeapSize                  = 122916538                              {pd product} {ergonomic}\n","stream":"stdout","time":"2021-12-09T00:20:46.779287336Z"}
{"log":"     intx NumberOfLoopInstrToAlign                 = 4                                      {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779315504Z"}
{"log":"     intx ObjectAlignmentInBytes                   = 8                                    {lp64_product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779366865Z"}
{"log":"   size_t OldPLABSize                              = 1024                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779411429Z"}
{"log":"    uintx OldPLABWeight                            = 50                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779445524Z"}
{"log":"   size_t OldSize                                  = 5452592                                   {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779478093Z"}
{"log":"     bool OmitStackTraceInFastThrow                = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779508653Z"}
{"log":"ccstrlist OnError                                  =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779542528Z"}
{"log":"ccstrlist OnOutOfMemoryError                       =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779575172Z"}
{"log":"     intx OnStackReplacePercentage                 = 140                                    {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779609114Z"}
{"log":"     bool OptimizeFill                             = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779643038Z"}
{"log":"     bool OptimizePtrCompare                       = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779673412Z"}
{"log":"     bool OptimizeStringConcat                     = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779705633Z"}
{"log":"     bool OptoBundling                             = false                               {C2 pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779739987Z"}
{"log":"     intx OptoLoopAlignment                        = 16                                     {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779773881Z"}
{"log":"     bool OptoRegScheduling                        = true                                {C2 pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779803796Z"}
{"log":"     bool OptoScheduling                           = false                               {C2 pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779836362Z"}
{"log":"     bool OverrideVMProperties                     = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.77987563Z"}
{"log":"    uintx PLABWeight                               = 75                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779903155Z"}
{"log":"     bool PSChunkLargeArrays                       = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779933539Z"}
{"log":"      int ParGCArrayScanChunk                      = 50                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779970177Z"}
{"log":"    uintx ParGCDesiredObjsFromOverflowList         = 20                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.779993897Z"}
{"log":"     bool ParGCTrimOverflow                        = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780026365Z"}
{"log":"     bool ParGCUseLocalOverflow                    = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780062596Z"}
{"log":"    uintx ParallelGCBufferWastePct                 = 10                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780090275Z"}
{"log":"     uint ParallelGCThreads                        = 2                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780120683Z"}
{"log":"   size_t ParallelOldDeadWoodLimiterMean           = 50                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780154144Z"}
{"log":"   size_t ParallelOldDeadWoodLimiterStdDev         = 80                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780179807Z"}
{"log":"     bool ParallelRefProcBalancingEnabled          = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780210202Z"}
{"log":"     bool ParallelRefProcEnabled                   = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780243975Z"}
{"log":"     bool PartialPeelAtUnsignedTests               = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780283386Z"}
{"log":"     bool PartialPeelLoop                          = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780315946Z"}
{"log":"     intx PartialPeelNewPhiDelta                   = 0                                      {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780346165Z"}
{"log":"    uintx PausePadding                             = 1                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780379058Z"}
{"log":"     intx PerBytecodeRecompilationCutoff           = 200                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780406343Z"}
{"log":"     intx PerBytecodeTrapLimit                     = 4                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780439784Z"}
{"log":"     intx PerMethodRecompilationCutoff             = 400                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780473482Z"}
{"log":"     intx PerMethodTrapLimit                       = 100                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780506023Z"}
{"log":"     bool PerfAllowAtExitRegistration              = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780533296Z"}
{"log":"     bool PerfBypassFileSystemCheck                = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780567045Z"}
{"log":"     intx PerfDataMemorySize                       = 32768                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78060101Z"}
{"log":"     intx PerfDataSamplingInterval                 = 50                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780634629Z"}
{"log":"    ccstr PerfDataSaveFile                         =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780659691Z"}
{"log":"     bool PerfDataSaveToFile                       = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780690301Z"}
{"log":"     bool PerfDisableSharedMem                     = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780722938Z"}
{"log":"     intx PerfMaxStringConstLength                 = 1024                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780756273Z"}
{"log":"   size_t PreTouchParallelChunkSize                = 1073741824                                {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780783811Z"}
{"log":"     bool PreferContainerQuotaForCPUCount          = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780814215Z"}
{"log":"     bool PreferInterpreterNativeStubs             = false                                  {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780844755Z"}
{"log":"     intx PrefetchCopyIntervalInBytes              = 576                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780877589Z"}
{"log":"     intx PrefetchFieldsAhead                      = 1                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78090772Z"}
{"log":"     intx PrefetchScanIntervalInBytes              = 576                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780935127Z"}
{"log":"     bool PreserveAllAnnotations                   = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780968761Z"}
{"log":"     bool PreserveFramePointer                     = false                                  {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.780999315Z"}
{"log":"   size_t PretenureSizeThreshold                   = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781036024Z"}
{"log":"     bool PrintClassHistogram                      = false                                  {manageable} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781062189Z"}
{"log":"     bool PrintCodeCache                           = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781095946Z"}
{"log":"     bool PrintCodeCacheOnCompilation              = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781128466Z"}
{"log":"     bool PrintCommandLineFlags                    = true                                      {product} {command line}\n","stream":"stdout","time":"2021-12-09T00:20:46.781160011Z"}
{"log":"     bool PrintCompilation                         = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781192434Z"}
{"log":"     bool PrintConcurrentLocks                     = false                                  {manageable} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781228594Z"}
{"log":"     bool PrintExtendedThreadInfo                  = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781262611Z"}
{"log":"     bool PrintFlagsFinal                          = true                                      {product} {command line}\n","stream":"stdout","time":"2021-12-09T00:20:46.781290033Z"}
{"log":"     bool PrintFlagsInitial                        = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781327872Z"}
{"log":"     bool PrintFlagsRanges                         = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781353828Z"}
{"log":"     bool PrintGC                                  = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781420892Z"}
{"log":"     bool PrintGCDetails                           = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781452322Z"}
{"log":"     bool PrintHeapAtSIGBREAK                      = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781465592Z"}
{"log":"     bool PrintJNIResolving                        = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781517117Z"}
{"log":"     bool PrintSafepointStatistics                 = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781538479Z"}
{"log":"     intx PrintSafepointStatisticsCount            = 300                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781558128Z"}
{"log":"     intx PrintSafepointStatisticsTimeout          = -1                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781596982Z"}
{"log":"     bool PrintSharedArchiveAndExit                = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781626527Z"}
{"log":"     bool PrintSharedDictionary                    = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781665279Z"}
{"log":"     bool PrintStringTableStatistics               = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781694968Z"}
{"log":"     bool PrintTieredEvents                        = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781728935Z"}
{"log":"     bool PrintVMOptions                           = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781743051Z"}
{"log":"     bool PrintVMQWaitTime                         = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781772989Z"}
{"log":"     bool PrintWarnings                            = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781820223Z"}
{"log":"    uintx ProcessDistributionStride                = 4                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781865491Z"}
{"log":"     bool ProfileInterpreter                       = true                                   {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781892894Z"}
{"log":"     bool ProfileIntervals                         = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781939585Z"}
{"log":"     intx ProfileIntervalsTicks                    = 100                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.781976642Z"}
{"log":"     intx ProfileMaturityPercentage                = 20                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782001517Z"}
{"log":"     bool ProfileVM                                = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782031504Z"}
{"log":"    uintx ProfiledCodeHeapSize                     = 122916538                              {pd product} {ergonomic}\n","stream":"stdout","time":"2021-12-09T00:20:46.782097755Z"}
{"log":"     bool ProfilerPrintByteCodeStatistics          = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782105049Z"}
{"log":"     bool ProfilerRecordPC                         = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78215579Z"}
{"log":"    uintx PromotedPadding                          = 3                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782204748Z"}
{"log":"    uintx QueuedAllocationWarningCount             = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782233671Z"}
{"log":"      int RTMRetryCount                            = 5                                    {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782271113Z"}
{"log":"     bool RangeCheckElimination                    = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782314217Z"}
{"log":"     bool ReassociateInvariants                    = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782347327Z"}
{"log":"     bool ReduceBulkZeroing                        = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782368213Z"}
{"log":"     bool ReduceFieldZeroing                       = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782409546Z"}
{"log":"     bool ReduceInitialCardMarks                   = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782440345Z"}
{"log":"     bool ReduceSignalUsage                        = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782475703Z"}
{"log":"     intx RefDiscoveryPolicy                       = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782524373Z"}
{"log":"     bool RegisterFinalizersAtInit                 = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782547798Z"}
{"log":"     bool RelaxAccessControlCheck                  = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782568977Z"}
{"log":"    ccstr ReplayDataFile                           =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782617632Z"}
{"log":"     bool RequireSharedSpaces                      = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782667247Z"}
{"log":"    uintx ReservedCodeCacheSize                    = 251658240                              {pd product} {ergonomic}\n","stream":"stdout","time":"2021-12-09T00:20:46.782717332Z"}
{"log":"     bool ResizeOldPLAB                            = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782739388Z"}
{"log":"     bool ResizePLAB                               = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782781894Z"}
{"log":"     bool ResizeTLAB                               = true                                   {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782808314Z"}
{"log":"     bool RestoreMXCSROnJNICalls                   = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782842652Z"}
{"log":"     bool RestrictContended                        = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782871219Z"}
{"log":"     bool RestrictReservedStack                    = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782926109Z"}
{"log":"     bool RewriteBytecodes                         = true                                   {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.782966785Z"}
{"log":"     bool RewriteFrequentPairs                     = true                                   {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78299893Z"}
{"log":"     bool SafepointTimeout                         = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78304318Z"}
{"log":"     intx SafepointTimeoutDelay                    = 10000                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783093503Z"}
{"log":"     bool ScavengeBeforeFullGC                     = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783107367Z"}
{"log":"     bool SegmentedCodeCache                       = true                                      {product} {ergonomic}\n","stream":"stdout","time":"2021-12-09T00:20:46.783145443Z"}
{"log":"     intx SelfDestructTimer                        = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783180283Z"}
{"log":"    ccstr SharedArchiveConfigFile                  =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783229771Z"}
{"log":"    ccstr SharedArchiveFile                        =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783251874Z"}
{"log":"   size_t SharedBaseAddress                        = 34359738368                               {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783305977Z"}
{"log":"    ccstr SharedClassListFile                      =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78334161Z"}
{"log":"    uintx SharedSymbolTableBucketSize              = 4                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783377448Z"}
{"log":"    ccstr ShenandoahGCHeuristics                   = adaptive                                  {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78340601Z"}
{"log":"    ccstr ShenandoahGCMode                         = satb                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783445495Z"}
{"log":"   size_t ShenandoahSoftMaxHeapSize                = 0                                      {manageable} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783490486Z"}
{"log":"     bool ShowMessageBoxOnError                    = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783536421Z"}
{"log":"     bool ShrinkHeapInSteps                        = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783556794Z"}
{"log":"     intx SoftRefLRUPolicyMSPerMB                  = 1000                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78357168Z"}
{"log":"     bool SplitIfBlocks                            = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783606895Z"}
{"log":"     intx StackRedPages                            = 1                                      {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783650644Z"}
{"log":"     intx StackReservedPages                       = 1                                      {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78368089Z"}
{"log":"     intx StackShadowPages                         = 20                                     {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783713361Z"}
{"log":"     bool StackTraceInThrowable                    = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783768921Z"}
{"log":"     intx StackYellowPages                         = 2                                      {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78381824Z"}
{"log":"    uintx StartAggressiveSweepingAt                = 10                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783844584Z"}
{"log":"     bool StartAttachListener                      = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78388697Z"}
{"log":"    ccstr StartFlightRecording                     =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783919987Z"}
{"log":"     bool StressLdcRewrite                         = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783935793Z"}
{"log":"    uintx StringDeduplicationAgeThreshold          = 3                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.783980528Z"}
{"log":"    uintx StringTableSize                          = 65536                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784006206Z"}
{"log":"     bool SuperWordLoopUnrollAnalysis              = true                                {C2 pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784060529Z"}
{"log":"     bool SuperWordReductions                      = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784096933Z"}
{"log":"     bool SuppressFatalErrorMessage                = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784155759Z"}
{"log":"    uintx SurvivorPadding                          = 3                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78417891Z"}
{"log":"    uintx SurvivorRatio                            = 8                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784225977Z"}
{"log":"     intx SuspendRetryCount                        = 50                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784269093Z"}
{"log":"     intx SuspendRetryDelay                        = 5                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784303642Z"}
{"log":"    uintx TLABAllocationWeight                     = 35                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784326697Z"}
{"log":"    uintx TLABRefillWasteFraction                  = 64                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784361068Z"}
{"log":"   size_t TLABSize                                 = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784392512Z"}
{"log":"     bool TLABStats                                = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784430987Z"}
{"log":"    uintx TLABWasteIncrement                       = 4                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784471529Z"}
{"log":"    uintx TLABWasteTargetPercent                   = 1                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784500377Z"}
{"log":"    uintx TargetPLABWastePct                       = 10                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784528017Z"}
{"log":"    uintx TargetSurvivorRatio                      = 50                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784578543Z"}
{"log":"    uintx TenuredGenerationSizeIncrement           = 20                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784622683Z"}
{"log":"    uintx TenuredGenerationSizeSupplement          = 80                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784645063Z"}
{"log":"    uintx TenuredGenerationSizeSupplementDecay     = 2                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784723926Z"}
{"log":"     bool ThreadLocalHandshakes                    = true                                   {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784727384Z"}
{"log":"     intx ThreadPriorityPolicy                     = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784770977Z"}
{"log":"     bool ThreadPriorityVerbose                    = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784800704Z"}
{"log":"     intx ThreadStackSize                          = 1024                                   {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784843889Z"}
{"log":"    uintx ThresholdTolerance                       = 10                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784882824Z"}
{"log":"     intx Tier0BackedgeNotifyFreqLog               = 10                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784912088Z"}
{"log":"     intx Tier0InvokeNotifyFreqLog                 = 7                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784972973Z"}
{"log":"     intx Tier0ProfilingStartPercentage            = 200                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.784991473Z"}
{"log":"     intx Tier23InlineeNotifyFreqLog               = 20                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785036873Z"}
{"log":"     intx Tier2BackEdgeThreshold                   = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785085763Z"}
{"log":"     intx Tier2BackedgeNotifyFreqLog               = 14                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785111403Z"}
{"log":"     intx Tier2CompileThreshold                    = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785134039Z"}
{"log":"     intx Tier2InvokeNotifyFreqLog                 = 11                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785184881Z"}
{"log":"     intx Tier3AOTBackEdgeThreshold                = 120000                                    {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785211263Z"}
{"log":"     intx Tier3AOTCompileThreshold                 = 15000                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785261469Z"}
{"log":"     intx Tier3AOTInvocationThreshold              = 10000                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785301516Z"}
{"log":"     intx Tier3AOTMinInvocationThreshold           = 1000                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785338412Z"}
{"log":"     intx Tier3BackEdgeThreshold                   = 60000                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785395649Z"}
{"log":"     intx Tier3BackedgeNotifyFreqLog               = 13                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785402966Z"}
{"log":"     intx Tier3CompileThreshold                    = 2000                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785438696Z"}
{"log":"     intx Tier3DelayOff                            = 2                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785463629Z"}
{"log":"     intx Tier3DelayOn                             = 5                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78551175Z"}
{"log":"     intx Tier3InvocationThreshold                 = 200                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785546415Z"}
{"log":"     intx Tier3InvokeNotifyFreqLog                 = 10                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785569138Z"}
{"log":"     intx Tier3LoadFeedback                        = 5                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785611752Z"}
{"log":"     intx Tier3MinInvocationThreshold              = 100                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785655656Z"}
{"log":"     intx Tier4BackEdgeThreshold                   = 40000                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785679597Z"}
{"log":"     intx Tier4CompileThreshold                    = 15000                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785733974Z"}
{"log":"     intx Tier4InvocationThreshold                 = 5000                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785758747Z"}
{"log":"     intx Tier4LoadFeedback                        = 3                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785787918Z"}
{"log":"     intx Tier4MinInvocationThreshold              = 600                                       {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785828443Z"}
{"log":"     bool TieredCompilation                        = true                                   {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785852211Z"}
{"log":"     intx TieredCompileTaskTimeout                 = 50                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785891413Z"}
{"log":"     intx TieredRateUpdateMaxTime                  = 25                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785914066Z"}
{"log":"     intx TieredRateUpdateMinTime                  = 1                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785942573Z"}
{"log":"     intx TieredStopAtLevel                        = 4                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.785984373Z"}
{"log":"     bool TimeLinearScan                           = false                                  {C1 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786014296Z"}
{"log":"    ccstr TraceJVMTI                               =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786041815Z"}
{"log":"     bool TraceSuspendWaitFailures                 = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786091213Z"}
{"log":"     intx TrackedInitializationLimit               = 50                                     {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786107588Z"}
{"log":"     bool TransmitErrorReport                      = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786150654Z"}
{"log":"     bool TrapBasedNullChecks                      = false                                  {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786188713Z"}
{"log":"     bool TrapBasedRangeChecks                     = false                               {C2 pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78621429Z"}
{"log":"     intx TypeProfileArgsLimit                     = 2                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786258962Z"}
{"log":"    uintx TypeProfileLevel                         = 111                                    {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786287817Z"}
{"log":"     intx TypeProfileMajorReceiverPercent          = 90                                     {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786335333Z"}
{"log":"     intx TypeProfileParmsLimit                    = 2                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786380742Z"}
{"log":"     intx TypeProfileWidth                         = 2                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786409489Z"}
{"log":"     intx UnguardOnExecutionViolation              = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786427517Z"}
{"log":"     bool UnlinkSymbolsALot                        = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786470835Z"}
{"log":"     bool UseAES                                   = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786521099Z"}
{"log":"     intx UseAVX                                   = 3                                    {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786569281Z"}
{"log":"     bool UseAdaptiveGCBoundary                    = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786600387Z"}
{"log":"     bool UseAdaptiveGenerationSizePolicyAtMajorCollection  = true                             {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786626011Z"}
{"log":"     bool UseAdaptiveGenerationSizePolicyAtMinorCollection  = true                             {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786648649Z"}
{"log":"     bool UseAdaptiveNUMAChunkSizing               = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786680908Z"}
{"log":"     bool UseAdaptiveSizeDecayMajorGCCost          = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786705949Z"}
{"log":"     bool UseAdaptiveSizePolicy                    = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786758923Z"}
{"log":"     bool UseAdaptiveSizePolicyFootprintGoal       = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786795037Z"}
{"log":"     bool UseAdaptiveSizePolicyWithSystemGC        = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786813048Z"}
{"log":"     bool UseAddressNop                            = true                                 {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.7868487Z"}
{"log":"     bool UseBASE64Intrinsics                      = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786885171Z"}
{"log":"     bool UseBMI1Instructions                      = true                                 {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786917898Z"}
{"log":"     bool UseBMI2Instructions                      = true                                 {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786962066Z"}
{"log":"     bool UseBiasedLocking                         = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.786982296Z"}
{"log":"     bool UseBimorphicInlining                     = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787015036Z"}
{"log":"     bool UseCLMUL                                 = true                                 {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787046605Z"}
{"log":"     bool UseCMSBestFit                            = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787088062Z"}
{"log":"     bool UseCMSInitiatingOccupancyOnly            = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787136752Z"}
{"log":"     bool UseCMoveUnconditionally                  = false                                  {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787165858Z"}
{"log":"     bool UseCodeAging                             = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787219429Z"}
{"log":"     bool UseCodeCacheFlushing                     = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787240656Z"}
{"log":"     bool UseCompiler                              = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787298295Z"}
{"log":"     bool UseCompressedClassPointers               = true                                 {lp64_product} {ergonomic}\n","stream":"stdout","time":"2021-12-09T00:20:46.787328107Z"}
{"log":"     bool UseCompressedOops                        = true                                 {lp64_product} {ergonomic}\n","stream":"stdout","time":"2021-12-09T00:20:46.787370292Z"}
{"log":"     bool UseConcMarkSweepGC                       = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787406932Z"}
{"log":"     bool UseCondCardMark                          = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787444561Z"}
{"log":"     bool UseContainerSupport                      = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787507272Z"}
{"log":"     bool UseCountLeadingZerosInstruction          = true                                 {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787530734Z"}
{"log":"     bool UseCountTrailingZerosInstruction         = true                                 {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78754662Z"}
{"log":"     bool UseCountedLoopSafepoints                 = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787589212Z"}
{"log":"     bool UseCounterDecay                          = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787614515Z"}
{"log":"     bool UseDivMod                                = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787643026Z"}
{"log":"     bool UseDynamicNumberOfCompilerThreads        = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787696339Z"}
{"log":"     bool UseDynamicNumberOfGCThreads              = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787719911Z"}
{"log":"     bool UseFMA                                   = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787783198Z"}
{"log":"     bool UseFPUForSpilling                        = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787792778Z"}
{"log":"     bool UseFastJNIAccessors                      = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787852286Z"}
{"log":"     bool UseFastStosb                             = true                                 {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.787882188Z"}
{"log":"     bool UseG1GC                                  = true                                      {product} {ergonomic}\n","stream":"stdout","time":"2021-12-09T00:20:46.787923739Z"}
{"log":"     bool UseGCOverheadLimit                       = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78797713Z"}
{"log":"     bool UseGCTaskAffinity                        = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788015462Z"}
{"log":"     bool UseHeavyMonitors                         = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788039647Z"}
{"log":"     bool UseHugeTLBFS                             = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788093722Z"}
{"log":"     bool UseInlineCaches                          = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78813279Z"}
{"log":"     bool UseInterpreter                           = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788179365Z"}
{"log":"     bool UseJumpTables                            = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788218198Z"}
{"log":"     bool UseLWPSynchronization                    = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788272379Z"}
{"log":"     bool UseLargePages                            = false                                  {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788299501Z"}
{"log":"     bool UseLargePagesInMetaspace                 = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788344995Z"}
{"log":"     bool UseLargePagesIndividualAllocation        = false                                  {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78838603Z"}
{"log":"     bool UseLegacyJNINameEscaping                 = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788423112Z"}
{"log":"     bool UseLinuxPosixThreadCPUClocks             = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788471644Z"}
{"log":"     bool UseLoopCounter                           = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788510357Z"}
{"log":"     bool UseLoopInvariantCodeMotion               = true                                   {C1 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788569129Z"}
{"log":"     bool UseLoopPredicate                         = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788593479Z"}
{"log":"     bool UseMaximumCompactionOnSystemGC           = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788645952Z"}
{"log":"     bool UseMembar                                = true                                   {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788659994Z"}
{"log":"     bool UseNUMA                                  = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788705431Z"}
{"log":"     bool UseNUMAInterleaving                      = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788737425Z"}
{"log":"     bool UseNewLongLShift                         = false                                {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78876256Z"}
{"log":"     bool UseOSErrorReporting                      = false                                  {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788791092Z"}
{"log":"     bool UseOnStackReplacement                    = true                                   {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788840242Z"}
{"log":"     bool UseOnlyInlinedBimorphic                  = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788859155Z"}
{"log":"     bool UseOpenJSSE                              = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788909921Z"}
{"log":"     bool UseOprofile                              = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788939141Z"}
{"log":"     bool UseOptoBiasInlining                      = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788981679Z"}
{"log":"     bool UsePSAdaptiveSurvivorSizePolicy          = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.788993303Z"}
{"log":"     bool UseParallelGC                            = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789026003Z"}
{"log":"     bool UseParallelOldGC                         = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789066864Z"}
{"log":"     bool UsePerfData                              = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789100339Z"}
{"log":"     bool UsePopCountInstruction                   = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789141585Z"}
{"log":"     bool UseProfiledLoopPredicate                 = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789171422Z"}
{"log":"     bool UseRDPCForConstantTableBase              = false                                  {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78923109Z"}
{"log":"     bool UseRTMDeopt                              = false                                {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789241888Z"}
{"log":"     bool UseRTMLocking                            = false                                {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789276853Z"}
{"log":"     bool UseSHA                                   = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789321215Z"}
{"log":"     bool UseSHM                                   = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789353813Z"}
{"log":"     intx UseSSE                                   = 4                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789390576Z"}
{"log":"     bool UseSSE42Intrinsics                       = true                                 {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789419796Z"}
{"log":"     bool UseSerialGC                              = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789468377Z"}
{"log":"     bool UseSharedSpaces                          = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789499861Z"}
{"log":"     bool UseShenandoahGC                          = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789531476Z"}
{"log":"     bool UseSignalChaining                        = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789569751Z"}
{"log":"     bool UseStoreImmI16                           = false                                {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789636934Z"}
{"log":"     bool UseStringDeduplication                   = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78964705Z"}
{"log":"     bool UseSubwordForMaxVector                   = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789690648Z"}
{"log":"     bool UseSuperWord                             = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789715573Z"}
{"log":"     bool UseTLAB                                  = true                                   {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789760553Z"}
{"log":"     bool UseThreadPriorities                      = true                                   {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789799661Z"}
{"log":"     bool UseTransparentHugePages                  = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789827325Z"}
{"log":"     bool UseTypeProfile                           = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.78987268Z"}
{"log":"     bool UseTypeSpeculation                       = true                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789907819Z"}
{"log":"     bool UseUnalignedLoadStores                   = true                                 {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789940229Z"}
{"log":"     bool UseVectorCmov                            = false                                  {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.789966359Z"}
{"log":"     bool UseXMMForArrayCopy                       = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790011209Z"}
{"log":"     bool UseXMMForObjInit                         = false                                {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.79006018Z"}
{"log":"     bool UseXmmI2D                                = false                                {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790096364Z"}
{"log":"     bool UseXmmI2F                                = false                                {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790122697Z"}
{"log":"     bool UseXmmLoadAndClearUpper                  = true                                 {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790144633Z"}
{"log":"     bool UseXmmRegToRegMoveAll                    = true                                 {ARCH product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790179571Z"}
{"log":"     bool VMThreadHintNoPreempt                    = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790215647Z"}
{"log":"     intx VMThreadPriority                         = -1                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790260311Z"}
{"log":"     intx VMThreadStackSize                        = 1024                                   {pd product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.79029648Z"}
{"log":"     intx ValueMapInitialSize                      = 11                                     {C1 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790328223Z"}
{"log":"     intx ValueMapMaxLoopSize                      = 8                                      {C1 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790364277Z"}
{"log":"     intx ValueSearchLimit                         = 1000                                   {C2 product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790421966Z"}
{"log":"     bool VerifyMergedCPBytecodes                  = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790449934Z"}
{"log":"     bool VerifySharedSpaces                       = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790481434Z"}
{"log":"    uintx YoungGenerationSizeIncrement             = 20                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790500812Z"}
{"log":"    uintx YoungGenerationSizeSupplement            = 80                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790545855Z"}
{"log":"    uintx YoungGenerationSizeSupplementDecay       = 8                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790570463Z"}
{"log":"   size_t YoungPLABSize                            = 4096                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790612559Z"}
{"log":"   double ZAllocationSpikeTolerance                = 2.000000                                  {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790639065Z"}
{"log":"     uint ZCollectionInterval                      = 0                                         {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790684053Z"}
{"log":"   double ZFragmentationLimit                      = 25.000000                                 {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790708438Z"}
{"log":"   size_t ZMarkStacksMax                           = 8589934592                                {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790754234Z"}
{"log":"    ccstr ZPath                                    =                                           {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790787939Z"}
{"log":"     bool ZStallOnOutOfMemory                      = true                                      {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790818029Z"}
{"log":"     uint ZStatisticsInterval                      = 10                                        {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790858975Z"}
{"log":"     bool ZeroTLAB                                 = false                                     {product} {default}\n","stream":"stdout","time":"2021-12-09T00:20:46.790886111Z"}
{"log":"2021-12-09T00:20:47,720+0000 [6 1] com.newrelic INFO: New Relic Agent: Loading configuration file \"/opt/touch/newrelic/./newrelic.yml\"\n","stream":"stdout","time":"2021-12-09T00:20:47.723505975Z"}
{"log":"2021-12-09T00:20:47,798+0000 [6 1] com.newrelic INFO: Using default collector host: collector.newrelic.com\n","stream":"stdout","time":"2021-12-09T00:20:47.798944979Z"}
{"log":"2021-12-09T00:20:47,872+0000 [6 1] com.newrelic INFO: Agent Host: qa-portal-api-57f5745cff-cjkxq IP: 10.227.91.167\n","stream":"stdout","time":"2021-12-09T00:20:47.872975695Z"}
{"log":"2021-12-09T00:20:47,872+0000 [6 1] com.newrelic INFO: New Relic Agent v6.2.1 is initializing...\n","stream":"stdout","time":"2021-12-09T00:20:47.873127834Z"}
{"log":"2021-12-09T00:20:48,618+0000 [6 18] com.newrelic INFO: Instrumentation com.newrelic.instrumentation.jdbc-resultset is disabled. Skipping.\n","stream":"stdout","time":"2021-12-09T00:20:48.618613907Z"}
{"log":"WARNING: An illegal reflective access operation has occurred\n","stream":"stderr","time":"2021-12-09T00:20:49.795670369Z"}
{"log":"WARNING: Illegal reflective access by com.newrelic.weave.weavepackage.NewClassAppender (file:/opt/touch/newrelic/newrelic.jar) to method java.net.URLClassLoader.addURL(java.net.URL)\n","stream":"stderr","time":"2021-12-09T00:20:49.795706906Z"}
{"log":"WARNING: Please consider reporting this to the maintainers of com.newrelic.weave.weavepackage.NewClassAppender\n","stream":"stderr","time":"2021-12-09T00:20:49.795712574Z"}
{"log":"WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\n","stream":"stderr","time":"2021-12-09T00:20:49.795716755Z"}
{"log":"WARNING: All illegal access operations will be denied in a future release\n","stream":"stderr","time":"2021-12-09T00:20:49.795730012Z"}
{"log":"2021-12-09T00:20:49,797+0000 [6 1] com.newrelic.agent.RPMServiceManagerImpl INFO: Configured to connect to New Relic at collector.newrelic.com:443\n","stream":"stdout","time":"2021-12-09T00:20:49.798072144Z"}
{"log":"2021-12-09T00:20:50,205+0000 [6 1] com.newrelic INFO: Setting audit_mode to false\n","stream":"stdout","time":"2021-12-09T00:20:50.205863054Z"}
{"log":"2021-12-09T00:20:50,384+0000 [6 1] com.newrelic.agent.config.ConfigServiceImpl INFO: Configuration file is /opt/touch/newrelic/./newrelic.yml\n","stream":"stdout","time":"2021-12-09T00:20:50.384550654Z"}
{"log":"2021-12-09T00:20:50,388+0000 [6 1] com.newrelic INFO: Host name is qa-portal-api-57f5745cff-cjkxq, display host qa-portal-api-57f5745cff-cjkxq for application qa-portal-api\n","stream":"stdout","time":"2021-12-09T00:20:50.388188563Z"}
{"log":"2021-12-09T00:20:50,388+0000 [6 1] com.newrelic INFO: High security is configured locally for application qa-portal-api.\n","stream":"stdout","time":"2021-12-09T00:20:50.388311198Z"}
{"log":"2021-12-09T00:20:50,987+0000 [6 1] com.newrelic INFO: Collector redirection to collector-003.newrelic.com:443\n","stream":"stdout","time":"2021-12-09T00:20:50.98806763Z"}
{"log":"2021-12-09T00:20:51,279+0000 [6 1] com.newrelic INFO: Max payload size is 1,000,000 bytes\n","stream":"stdout","time":"2021-12-09T00:20:51.279931145Z"}
{"log":"2021-12-09T00:20:51,279+0000 [6 1] com.newrelic INFO: Agent run id: Bb69A7LPLaetAC7vZjqqDIRhsUwoAAIBACdHIQEAAAAGAgRAKPzi2QAa7CfWnEd3q2h_74YUjU2JnvrUfrASegRRCx5XI-8DAAU2LjIuMQAecWEtcG9ydGFsLWFwaS01N2Y1NzQ1Y2ZmLWNqa3hxAA1xYS1wb3J0YWwtYXBp\n","stream":"stdout","time":"2021-12-09T00:20:51.280049494Z"}
{"log":"2021-12-09T00:20:51,280+0000 [6 1] com.newrelic INFO: Agent 6@qa-portal-api-57f5745cff-cjkxq/qa-portal-api connected to collector.newrelic.com:443\n","stream":"stdout","time":"2021-12-09T00:20:51.280553327Z"}
{"log":"2021-12-09T00:20:51,283+0000 [6 1] com.newrelic INFO: Reporting to: https://rpm.newrelic.com/accounts/3075942/applications/1076428002\n","stream":"stdout","time":"2021-12-09T00:20:51.283639849Z"}
{"log":"2021-12-09T00:20:51,285+0000 [6 1] com.newrelic INFO: Using default collector host: collector.newrelic.com\n","stream":"stdout","time":"2021-12-09T00:20:51.285764182Z"}
{"log":"2021-12-09T00:20:51,288+0000 [6 1] com.newrelic INFO: Using default collector host: collector.newrelic.com\n","stream":"stdout","time":"2021-12-09T00:20:51.288657844Z"}
{"log":"2021-12-09T00:20:51,295+0000 [6 1] com.newrelic INFO: The agent is in high security mode for qa-portal-api: transaction_tracer.record_sql setting is \"obfuscated\". Disabling the collection of request parameters, message queue parameters, and user attributes.\n","stream":"stdout","time":"2021-12-09T00:20:51.295476291Z"}
{"log":"2021-12-09T00:20:51,318+0000 [6 1] com.newrelic INFO: Real user monitoring is enabled for application qa-portal-api. Auto instrumentation is disabled.\n","stream":"stdout","time":"2021-12-09T00:20:51.319002638Z"}
{"log":"2021-12-09T00:20:51,320+0000 [6 1] com.newrelic INFO: New Relic Agent v6.2.1 has started\n","stream":"stdout","time":"2021-12-09T00:20:51.320935867Z"}
{"log":"2021-12-09T00:20:51,320+0000 [6 1] com.newrelic INFO: Agent class loader: com.newrelic.bootstrap.BootstrapAgent$JVMAgentClassLoader@20deea7f\n","stream":"stdout","time":"2021-12-09T00:20:51.321090753Z"}
{"log":"2021-12-09T00:20:51,321+0000 [6 1] com.newrelic INFO: Premain startup complete in 4,191ms\n","stream":"stdout","time":"2021-12-09T00:20:51.321333245Z"}
{"log":"2021-12-09T00:20:54.681+0000 level=\"INFO\" logger=\"i.d.s.DefaultServerFactory\"  Registering jersey handler with root path prefix: /\n","stream":"stdout","time":"2021-12-09T00:20:54.709558907Z"}
{"log":"2021-12-09T00:20:54.712+0000 level=\"INFO\" logger=\"i.d.s.DefaultServerFactory\"  Registering admin handler with root path prefix: /\n","stream":"stdout","time":"2021-12-09T00:20:54.712387488Z"}
{"log":"2021-12-09T00:21:04.087+0000 level=\"ERROR\" logger=\"o.a.t.j.p.ConnectionPool\"  Unable to create initial connections of pool.\n","stream":"stdout","time":"2021-12-09T00:21:04.088773994Z"}
{"log":"com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n","stream":"stdout","time":"2021-12-09T00:21:04.08883402Z"}
{"log":"\n","stream":"stdout","time":"2021-12-09T00:21:04.088842508Z"}
{"log":"The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n","stream":"stdout","time":"2021-12-09T00:21:04.088846998Z"}
{"log":"\u0009at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)\n","stream":"stdout","time":"2021-12-09T00:21:04.088851687Z"}
{"log":"\u0009at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)\n","stream":"stdout","time":"2021-12-09T00:21:04.088856618Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)\n","stream":"stdout","time":"2021-12-09T00:21:04.088861541Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.\u003cinit\u003e(ConnectionImpl.java:456)\n","stream":"stdout","time":"2021-12-09T00:21:04.088865986Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)\n","stream":"stdout","time":"2021-12-09T00:21:04.088870808Z"}
{"log":"\u0009at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)\n","stream":"stdout","time":"2021-12-09T00:21:04.088875198Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:347)\n","stream":"stdout","time":"2021-12-09T00:21:04.088879625Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:228)\n","stream":"stdout","time":"2021-12-09T00:21:04.088884073Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:769)\n","stream":"stdout","time":"2021-12-09T00:21:04.088888555Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:697)\n","stream":"stdout","time":"2021-12-09T00:21:04.088893038Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:496)\n","stream":"stdout","time":"2021-12-09T00:21:04.088897331Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.ConnectionPool.\u003cinit\u003e(ConnectionPool.java:154)\n","stream":"stdout","time":"2021-12-09T00:21:04.088901636Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:121)\n","stream":"stdout","time":"2021-12-09T00:21:04.088906355Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:110)\n","stream":"stdout","time":"2021-12-09T00:21:04.088910793Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:134)\n","stream":"stdout","time":"2021-12-09T00:21:04.088915108Z"}
{"log":"\u0009at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)\n","stream":"stdout","time":"2021-12-09T00:21:04.088919461Z"}
{"log":"\u0009at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)\n","stream":"stdout","time":"2021-12-09T00:21:04.088923918Z"}
{"log":"\u0009at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)\n","stream":"stdout","time":"2021-12-09T00:21:04.08892815Z"}
{"log":"\u0009at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)\n","stream":"stdout","time":"2021-12-09T00:21:04.088934695Z"}
{"log":"\u0009at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)\n","stream":"stdout","time":"2021-12-09T00:21:04.088939363Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n","stream":"stdout","time":"2021-12-09T00:21:04.088943479Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n","stream":"stdout","time":"2021-12-09T00:21:04.088950502Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n","stream":"stdout","time":"2021-12-09T00:21:04.088955211Z"}
{"log":"\u0009at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)\n","stream":"stdout","time":"2021-12-09T00:21:04.088959823Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)\n","stream":"stdout","time":"2021-12-09T00:21:04.08896446Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)\n","stream":"stdout","time":"2021-12-09T00:21:04.088968961Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n","stream":"stdout","time":"2021-12-09T00:21:04.088973498Z"}
{"log":"\u0009at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.\u003cinit\u003e(InFlightMetadataCollectorImpl.java:176)\n","stream":"stdout","time":"2021-12-09T00:21:04.088978003Z"}
{"log":"\u0009at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)\n","stream":"stdout","time":"2021-12-09T00:21:04.088982596Z"}
{"log":"\u0009at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)\n","stream":"stdout","time":"2021-12-09T00:21:04.088987199Z"}
{"log":"\u0009at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:479)\n","stream":"stdout","time":"2021-12-09T00:21:04.088991671Z"}
{"log":"\u0009at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:85)\n","stream":"stdout","time":"2021-12-09T00:21:04.088996074Z"}
{"log":"\u0009at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:709)\n","stream":"stdout","time":"2021-12-09T00:21:04.089000671Z"}
{"log":"\u0009at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:744)\n","stream":"stdout","time":"2021-12-09T00:21:04.089005093Z"}
{"log":"\u0009at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:616)\n","stream":"stdout","time":"2021-12-09T00:21:04.089009377Z"}
{"log":"\u0009at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:600)\n","stream":"stdout","time":"2021-12-09T00:21:04.089013953Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)\n","stream":"stdout","time":"2021-12-09T00:21:04.089019412Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)\n","stream":"stdout","time":"2021-12-09T00:21:04.089026205Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)\n","stream":"stdout","time":"2021-12-09T00:21:04.089031324Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:04.08903598Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:04.089040773Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:04.089045375Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:04.089052018Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:04.089056565Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:04.089061012Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1598)\n","stream":"stdout","time":"2021-12-09T00:21:04.089066569Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1562)\n","stream":"stdout","time":"2021-12-09T00:21:04.089072102Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1451)\n","stream":"stdout","time":"2021-12-09T00:21:04.089077266Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1338)\n","stream":"stdout","time":"2021-12-09T00:21:04.089081973Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:04.089086529Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stdout","time":"2021-12-09T00:21:04.089091722Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stdout","time":"2021-12-09T00:21:04.089095824Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stdout","time":"2021-12-09T00:21:04.089099937Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stdout","time":"2021-12-09T00:21:04.089105528Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stdout","time":"2021-12-09T00:21:04.089110171Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:04.089114462Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:04.089118898Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:04.08912302Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:04.089127265Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:04.089131834Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:04.089136075Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:04.089140809Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stdout","time":"2021-12-09T00:21:04.089145197Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:04.089151627Z"}
{"log":"\u0009at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)\n","stream":"stdout","time":"2021-12-09T00:21:04.089156722Z"}
{"log":"\u0009at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\n","stream":"stdout","time":"2021-12-09T00:21:04.089161049Z"}
{"log":"\u0009at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)\n","stream":"stdout","time":"2021-12-09T00:21:04.089165733Z"}
{"log":"\u0009at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\n","stream":"stdout","time":"2021-12-09T00:21:04.089170207Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)\n","stream":"stdout","time":"2021-12-09T00:21:04.089175125Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)\n","stream":"stdout","time":"2021-12-09T00:21:04.089179501Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:04.089183599Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:04.089187977Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:04.089192148Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:04.089196613Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:04.089200695Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:04.0892047Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stdout","time":"2021-12-09T00:21:04.089208916Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:04.089213893Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stdout","time":"2021-12-09T00:21:04.089218187Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stdout","time":"2021-12-09T00:21:04.089222244Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stdout","time":"2021-12-09T00:21:04.089226393Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stdout","time":"2021-12-09T00:21:04.089230897Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stdout","time":"2021-12-09T00:21:04.089235178Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:04.089241572Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:04.089246408Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:04.08925087Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:04.089254988Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:04.089259566Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:04.089263613Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:04.089267993Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stdout","time":"2021-12-09T00:21:04.089272243Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:04.08927693Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stdout","time":"2021-12-09T00:21:04.08928142Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stdout","time":"2021-12-09T00:21:04.089286018Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stdout","time":"2021-12-09T00:21:04.089290567Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stdout","time":"2021-12-09T00:21:04.08929514Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stdout","time":"2021-12-09T00:21:04.089299744Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:04.089304521Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:04.089309322Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:04.089313955Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:04.089318561Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:04.089323466Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:04.089328048Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:04.089334448Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stdout","time":"2021-12-09T00:21:04.089339064Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:04.089343548Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stdout","time":"2021-12-09T00:21:04.089348157Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stdout","time":"2021-12-09T00:21:04.089355833Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stdout","time":"2021-12-09T00:21:04.089360266Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stdout","time":"2021-12-09T00:21:04.089364292Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stdout","time":"2021-12-09T00:21:04.089369131Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:04.089373225Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:04.089377695Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:04.089382095Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:04.089386353Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:04.089390389Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:04.089394654Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)\n","stream":"stdout","time":"2021-12-09T00:21:04.089400403Z"}
{"log":"\u0009at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)\n","stream":"stdout","time":"2021-12-09T00:21:04.089404829Z"}
{"log":"\u0009at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)\n","stream":"stdout","time":"2021-12-09T00:21:04.089409446Z"}
{"log":"\u0009at com.touch.dropwizard.spring.SpringBundle.configureWebAppContext(SpringBundle.java:79)\n","stream":"stdout","time":"2021-12-09T00:21:04.089413496Z"}
{"log":"\u0009at com.touch.paylater.portalapi.application.configuration.dropwizard.PortalApiSpringBundle.configureWebAppContext(PortalApiSpringBundle.java:29)\n","stream":"stdout","time":"2021-12-09T00:21:04.089417397Z"}
{"log":"\u0009at com.touch.paylater.portalapi.application.configuration.dropwizard.PortalApiSpringBundle.configureWebAppContext(PortalApiSpringBundle.java:18)\n","stream":"stdout","time":"2021-12-09T00:21:04.089421744Z"}
{"log":"\u0009at com.touch.dropwizard.spring.SpringBundle.run(SpringBundle.java:56)\n","stream":"stdout","time":"2021-12-09T00:21:04.089426188Z"}
{"log":"\u0009at com.touch.dropwizard.spring.SpringBundle.run(SpringBundle.java:23)\n","stream":"stdout","time":"2021-12-09T00:21:04.089433588Z"}
{"log":"\u0009at io.dropwizard.setup.Bootstrap.run(Bootstrap.java:199)\n","stream":"stdout","time":"2021-12-09T00:21:04.089438024Z"}
{"log":"\u0009at io.dropwizard.cli.EnvironmentCommand.run(EnvironmentCommand.java:58)\n","stream":"stdout","time":"2021-12-09T00:21:04.089442672Z"}
{"log":"\u0009at io.dropwizard.cli.ConfiguredCommand.run(ConfiguredCommand.java:98)\n","stream":"stdout","time":"2021-12-09T00:21:04.089446916Z"}
{"log":"\u0009at io.dropwizard.cli.Cli.run(Cli.java:78)\n","stream":"stdout","time":"2021-12-09T00:21:04.089450881Z"}
{"log":"\u0009at io.dropwizard.Application.run(Application.java:94)\n","stream":"stdout","time":"2021-12-09T00:21:04.089454707Z"}
{"log":"\u0009at com.touch.paylater.portalapi.application.PortalApiApplication.main(PortalApiApplication.java:35)\n","stream":"stdout","time":"2021-12-09T00:21:04.0894587Z"}
{"log":"Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n","stream":"stdout","time":"2021-12-09T00:21:04.089463256Z"}
{"log":"\n","stream":"stdout","time":"2021-12-09T00:21:04.089467368Z"}
{"log":"The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n","stream":"stdout","time":"2021-12-09T00:21:04.089471239Z"}
{"log":"\u0009at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n","stream":"stdout","time":"2021-12-09T00:21:04.089476018Z"}
{"log":"\u0009at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:04.089480009Z"}
{"log":"\u0009at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:04.089484358Z"}
{"log":"\u0009at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:04.089488621Z"}
{"log":"\u0009at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)\n","stream":"stdout","time":"2021-12-09T00:21:04.089492653Z"}
{"log":"\u0009at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)\n","stream":"stdout","time":"2021-12-09T00:21:04.089496788Z"}
{"log":"\u0009at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)\n","stream":"stdout","time":"2021-12-09T00:21:04.089500836Z"}
{"log":"\u0009at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)\n","stream":"stdout","time":"2021-12-09T00:21:04.089506062Z"}
{"log":"\u0009at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)\n","stream":"stdout","time":"2021-12-09T00:21:04.089510246Z"}
{"log":"\u0009at com.mysql.cj.NativeSession.connect(NativeSession.java:144)\n","stream":"stdout","time":"2021-12-09T00:21:04.089514555Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956)\n","stream":"stdout","time":"2021-12-09T00:21:04.08951854Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826)\n","stream":"stdout","time":"2021-12-09T00:21:04.089523016Z"}
{"log":"\u0009... 128 common frames omitted\n","stream":"stdout","time":"2021-12-09T00:21:04.089527012Z"}
{"log":"Caused by: java.net.UnknownHostException: mysql: Name does not resolve\n","stream":"stdout","time":"2021-12-09T00:21:04.089531258Z"}
{"log":"\u0009at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)\n","stream":"stdout","time":"2021-12-09T00:21:04.089535629Z"}
{"log":"\u0009at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:04.089540434Z"}
{"log":"\u0009at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:04.089544548Z"}
{"log":"\u0009at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:04.08955112Z"}
{"log":"\u0009at java.base/java.net.InetAddress.getAllByName0(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:04.089555044Z"}
{"log":"\u0009at java.base/java.net.InetAddress.getAllByName(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:04.089559148Z"}
{"log":"\u0009at java.base/java.net.InetAddress.getAllByName(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:04.08956273Z"}
{"log":"\u0009at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:132)\n","stream":"stdout","time":"2021-12-09T00:21:04.089566616Z"}
{"log":"\u0009at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)\n","stream":"stdout","time":"2021-12-09T00:21:04.089570719Z"}
{"log":"\u0009... 131 common frames omitted\n","stream":"stdout","time":"2021-12-09T00:21:04.089574788Z"}
{"log":"2021-12-09T00:21:04.089+0000 level=\"WARN\" logger=\"o.h.e.j.e.i.JdbcEnvironmentInitiator\"  HHH000342: Could not obtain connection to query metadata\n","stream":"stdout","time":"2021-12-09T00:21:04.09019033Z"}
{"log":"com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n","stream":"stdout","time":"2021-12-09T00:21:04.090208955Z"}
{"log":"\n","stream":"stdout","time":"2021-12-09T00:21:04.090214626Z"}
{"log":"The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n","stream":"stdout","time":"2021-12-09T00:21:04.090218372Z"}
{"log":"\u0009at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)\n","stream":"stdout","time":"2021-12-09T00:21:04.090222624Z"}
{"log":"\u0009at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)\n","stream":"stdout","time":"2021-12-09T00:21:04.09022665Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)\n","stream":"stdout","time":"2021-12-09T00:21:04.090230628Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.\u003cinit\u003e(ConnectionImpl.java:456)\n","stream":"stdout","time":"2021-12-09T00:21:04.090234302Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)\n","stream":"stdout","time":"2021-12-09T00:21:04.090238346Z"}
{"log":"\u0009at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)\n","stream":"stdout","time":"2021-12-09T00:21:04.090242081Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:347)\n","stream":"stdout","time":"2021-12-09T00:21:04.090245912Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:228)\n","stream":"stdout","time":"2021-12-09T00:21:04.090258652Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:769)\n","stream":"stdout","time":"2021-12-09T00:21:04.090262718Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:697)\n","stream":"stdout","time":"2021-12-09T00:21:04.090266455Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:496)\n","stream":"stdout","time":"2021-12-09T00:21:04.090270164Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.ConnectionPool.\u003cinit\u003e(ConnectionPool.java:154)\n","stream":"stdout","time":"2021-12-09T00:21:04.090273822Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:121)\n","stream":"stdout","time":"2021-12-09T00:21:04.090277893Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:110)\n","stream":"stdout","time":"2021-12-09T00:21:04.090281617Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:134)\n","stream":"stdout","time":"2021-12-09T00:21:04.090285346Z"}
{"log":"\u0009at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)\n","stream":"stdout","time":"2021-12-09T00:21:04.09028902Z"}
{"log":"\u0009at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)\n","stream":"stdout","time":"2021-12-09T00:21:04.090298117Z"}
{"log":"\u0009at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)\n","stream":"stdout","time":"2021-12-09T00:21:04.090302378Z"}
{"log":"\u0009at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)\n","stream":"stdout","time":"2021-12-09T00:21:04.090307346Z"}
{"log":"\u0009at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)\n","stream":"stdout","time":"2021-12-09T00:21:04.090311427Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n","stream":"stdout","time":"2021-12-09T00:21:04.090315427Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n","stream":"stdout","time":"2021-12-09T00:21:04.090319386Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n","stream":"stdout","time":"2021-12-09T00:21:04.090323306Z"}
{"log":"\u0009at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)\n","stream":"stdout","time":"2021-12-09T00:21:04.090327069Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)\n","stream":"stdout","time":"2021-12-09T00:21:04.090330973Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)\n","stream":"stdout","time":"2021-12-09T00:21:04.090334838Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n","stream":"stdout","time":"2021-12-09T00:21:04.090338572Z"}
{"log":"\u0009at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.\u003cinit\u003e(InFlightMetadataCollectorImpl.java:176)\n","stream":"stdout","time":"2021-12-09T00:21:04.090342435Z"}
{"log":"\u0009at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)\n","stream":"stdout","time":"2021-12-09T00:21:04.090346511Z"}
{"log":"\u0009at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)\n","stream":"stdout","time":"2021-12-09T00:21:04.09035029Z"}
{"log":"\u0009at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:479)\n","stream":"stdout","time":"2021-12-09T00:21:04.090354126Z"}
{"log":"\u0009at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:85)\n","stream":"stdout","time":"2021-12-09T00:21:04.090358016Z"}
{"log":"\u0009at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:709)\n","stream":"stdout","time":"2021-12-09T00:21:04.090361822Z"}
{"log":"\u0009at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:744)\n","stream":"stdout","time":"2021-12-09T00:21:04.090365564Z"}
{"log":"\u0009at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:616)\n","stream":"stdout","time":"2021-12-09T00:21:04.090369427Z"}
{"log":"\u0009at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:600)\n","stream":"stdout","time":"2021-12-09T00:21:04.090373221Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)\n","stream":"stdout","time":"2021-12-09T00:21:04.09037749Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)\n","stream":"stdout","time":"2021-12-09T00:21:04.090383974Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)\n","stream":"stdout","time":"2021-12-09T00:21:04.090388241Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:04.090392278Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:04.090396099Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:04.090399962Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:04.090403926Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:04.090408152Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:04.090412004Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1598)\n","stream":"stdout","time":"2021-12-09T00:21:04.090415892Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1562)\n","stream":"stdout","time":"2021-12-09T00:21:04.090420115Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1451)\n","stream":"stdout","time":"2021-12-09T00:21:04.090423985Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1338)\n","stream":"stdout","time":"2021-12-09T00:21:04.090427988Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:04.090432038Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stdout","time":"2021-12-09T00:21:04.090436021Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stdout","time":"2021-12-09T00:21:04.090439835Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stdout","time":"2021-12-09T00:21:04.090443859Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stdout","time":"2021-12-09T00:21:04.090448218Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stdout","time":"2021-12-09T00:21:04.090452154Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:04.090456365Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:04.090460409Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:04.090466204Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:04.090470212Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:04.090474126Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:04.090479899Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:04.090483917Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stdout","time":"2021-12-09T00:21:04.090488103Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:04.090492082Z"}
{"log":"\u0009at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)\n","stream":"stdout","time":"2021-12-09T00:21:04.090495914Z"}
{"log":"\u0009at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\n","stream":"stdout","time":"2021-12-09T00:21:04.090500258Z"}
{"log":"\u0009at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)\n","stream":"stdout","time":"2021-12-09T00:21:04.090503864Z"}
{"log":"\u0009at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\n","stream":"stdout","time":"2021-12-09T00:21:04.090507766Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)\n","stream":"stdout","time":"2021-12-09T00:21:04.090512957Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)\n","stream":"stdout","time":"2021-12-09T00:21:04.090522161Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:04.090526289Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:04.090530556Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:04.09053459Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:04.090538362Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:04.090542202Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:04.090546076Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stdout","time":"2021-12-09T00:21:04.090549892Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:04.090553972Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stdout","time":"2021-12-09T00:21:04.090560194Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stdout","time":"2021-12-09T00:21:04.090564186Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stdout","time":"2021-12-09T00:21:04.090568056Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stdout","time":"2021-12-09T00:21:04.090572161Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stdout","time":"2021-12-09T00:21:04.090576007Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:04.09058015Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:04.090584325Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:04.090588441Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:04.09059224Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:04.090596234Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:04.090600019Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:04.090604053Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stdout","time":"2021-12-09T00:21:04.090608025Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:04.09061195Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stdout","time":"2021-12-09T00:21:04.090615818Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stdout","time":"2021-12-09T00:21:04.090619741Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stdout","time":"2021-12-09T00:21:04.090623695Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stdout","time":"2021-12-09T00:21:04.090627406Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stdout","time":"2021-12-09T00:21:04.090631459Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:04.090636567Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:04.090642633Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:04.090646781Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:04.090650769Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:04.090655055Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:04.090658953Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:04.090662745Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stdout","time":"2021-12-09T00:21:04.090666649Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:04.090670579Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stdout","time":"2021-12-09T00:21:04.090674569Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stdout","time":"2021-12-09T00:21:04.090678417Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stdout","time":"2021-12-09T00:21:04.090682341Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stdout","time":"2021-12-09T00:21:04.090686341Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stdout","time":"2021-12-09T00:21:04.090690379Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:04.090694453Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:04.090698309Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:04.090702121Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:04.090706069Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:04.090710036Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:04.090713781Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)\n","stream":"stdout","time":"2021-12-09T00:21:04.090718146Z"}
{"log":"\u0009at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)\n","stream":"stdout","time":"2021-12-09T00:21:04.090722301Z"}
{"log":"\u0009at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)\n","stream":"stdout","time":"2021-12-09T00:21:04.090728285Z"}
{"log":"\u0009at com.touch.dropwizard.spring.SpringBundle.configureWebAppContext(SpringBundle.java:79)\n","stream":"stdout","time":"2021-12-09T00:21:04.09073217Z"}
{"log":"\u0009at com.touch.paylater.portalapi.application.configuration.dropwizard.PortalApiSpringBundle.configureWebAppContext(PortalApiSpringBundle.java:29)\n","stream":"stdout","time":"2021-12-09T00:21:04.090736045Z"}
{"log":"\u0009at com.touch.paylater.portalapi.application.configuration.dropwizard.PortalApiSpringBundle.configureWebAppContext(PortalApiSpringBundle.java:18)\n","stream":"stdout","time":"2021-12-09T00:21:04.090740053Z"}
{"log":"\u0009at com.touch.dropwizard.spring.SpringBundle.run(SpringBundle.java:56)\n","stream":"stdout","time":"2021-12-09T00:21:04.090743995Z"}
{"log":"\u0009at com.touch.dropwizard.spring.SpringBundle.run(SpringBundle.java:23)\n","stream":"stdout","time":"2021-12-09T00:21:04.090747765Z"}
{"log":"\u0009at io.dropwizard.setup.Bootstrap.run(Bootstrap.java:199)\n","stream":"stdout","time":"2021-12-09T00:21:04.090751466Z"}
{"log":"\u0009at io.dropwizard.cli.EnvironmentCommand.run(EnvironmentCommand.java:58)\n","stream":"stdout","time":"2021-12-09T00:21:04.090755309Z"}
{"log":"\u0009at io.dropwizard.cli.ConfiguredCommand.run(ConfiguredCommand.java:98)\n","stream":"stdout","time":"2021-12-09T00:21:04.090759065Z"}
{"log":"\u0009at io.dropwizard.cli.Cli.run(Cli.java:78)\n","stream":"stdout","time":"2021-12-09T00:21:04.090762865Z"}
{"log":"\u0009at io.dropwizard.Application.run(Application.java:94)\n","stream":"stdout","time":"2021-12-09T00:21:04.090766406Z"}
{"log":"\u0009at com.touch.paylater.portalapi.application.PortalApiApplication.main(PortalApiApplication.java:35)\n","stream":"stdout","time":"2021-12-09T00:21:04.090770057Z"}
{"log":"Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n","stream":"stdout","time":"2021-12-09T00:21:04.090774219Z"}
{"log":"\n","stream":"stdout","time":"2021-12-09T00:21:04.090778009Z"}
{"log":"The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n","stream":"stdout","time":"2021-12-09T00:21:04.090781497Z"}
{"log":"\u0009at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n","stream":"stdout","time":"2021-12-09T00:21:04.090785409Z"}
{"log":"\u0009at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:04.090789411Z"}
{"log":"\u0009at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:04.090793201Z"}
{"log":"\u0009at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:04.090796993Z"}
{"log":"\u0009at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)\n","stream":"stdout","time":"2021-12-09T00:21:04.090800735Z"}
{"log":"\u0009at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)\n","stream":"stdout","time":"2021-12-09T00:21:04.090804337Z"}
{"log":"\u0009at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)\n","stream":"stdout","time":"2021-12-09T00:21:04.090808065Z"}
{"log":"\u0009at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)\n","stream":"stdout","time":"2021-12-09T00:21:04.090812314Z"}
{"log":"\u0009at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)\n","stream":"stdout","time":"2021-12-09T00:21:04.090816303Z"}
{"log":"\u0009at com.mysql.cj.NativeSession.connect(NativeSession.java:144)\n","stream":"stdout","time":"2021-12-09T00:21:04.090819964Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956)\n","stream":"stdout","time":"2021-12-09T00:21:04.090825065Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826)\n","stream":"stdout","time":"2021-12-09T00:21:04.090828552Z"}
{"log":"\u0009... 128 common frames omitted\n","stream":"stdout","time":"2021-12-09T00:21:04.090831701Z"}
{"log":"Caused by: java.net.UnknownHostException: mysql: Name does not resolve\n","stream":"stdout","time":"2021-12-09T00:21:04.090834678Z"}
{"log":"\u0009at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)\n","stream":"stdout","time":"2021-12-09T00:21:04.090837733Z"}
{"log":"\u0009at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:04.090841052Z"}
{"log":"\u0009at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:04.090844379Z"}
{"log":"\u0009at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:04.090847791Z"}
{"log":"\u0009at java.base/java.net.InetAddress.getAllByName0(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:04.090850983Z"}
{"log":"\u0009at java.base/java.net.InetAddress.getAllByName(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:04.090854064Z"}
{"log":"\u0009at java.base/java.net.InetAddress.getAllByName(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:04.09085716Z"}
{"log":"\u0009at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:132)\n","stream":"stdout","time":"2021-12-09T00:21:04.090860515Z"}
{"log":"\u0009at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)\n","stream":"stdout","time":"2021-12-09T00:21:04.090863896Z"}
{"log":"\u0009... 131 common frames omitted\n","stream":"stdout","time":"2021-12-09T00:21:04.090867158Z"}
{"log":"2021-12-09T00:21:06.247+0000 level=\"WARN\" logger=\"o.h.m.RootClass\"  HHH000038: Composite-id class does not override equals(): com.touch.paylater.core.domain.SuspiciousMatterReport$IdAndTime\n","stream":"stdout","time":"2021-12-09T00:21:06.24819187Z"}
{"log":"2021-12-09T00:21:06.247+0000 level=\"WARN\" logger=\"o.h.m.RootClass\"  HHH000039: Composite-id class does not override hashCode(): com.touch.paylater.core.domain.SuspiciousMatterReport$IdAndTime\n","stream":"stdout","time":"2021-12-09T00:21:06.248238626Z"}
{"log":"2021-12-09T00:21:06.294+0000 level=\"WARN\" logger=\"o.h.orm.cache\"  HHH90001006: Missing cache[com.touch.paylater.core.domain.TouchMerchantCategory] was created on-the-fly. The created cache will use a provider-specific default configuration: make sure you defined one. You can disable this warning by setting 'hibernate.javax.cache.missing_cache_strategy' to 'create'.\n","stream":"stdout","time":"2021-12-09T00:21:06.295379956Z"}
{"log":"2021-12-09T00:21:06.488+0000 level=\"WARN\" logger=\"o.h.orm.cache\"  HHH90001006: Missing cache[com.touch.paylater.core.domain.MerchantFeeConfig] was created on-the-fly. The created cache will use a provider-specific default configuration: make sure you defined one. You can disable this warning by setting 'hibernate.javax.cache.missing_cache_strategy' to 'create'.\n","stream":"stdout","time":"2021-12-09T00:21:06.489137411Z"}
{"log":"2021-12-09T00:21:06.492+0000 level=\"WARN\" logger=\"o.h.orm.cache\"  HHH90001006: Missing cache[com.touch.paylater.core.domain.FeeData] was created on-the-fly. The created cache will use a provider-specific default configuration: make sure you defined one. You can disable this warning by setting 'hibernate.javax.cache.missing_cache_strategy' to 'create'.\n","stream":"stdout","time":"2021-12-09T00:21:06.492617041Z"}
{"log":"2021-12-09T00:21:06.494+0000 level=\"WARN\" logger=\"o.h.orm.cache\"  HHH90001006: Missing cache[com.touch.paylater.core.domain.MerchantCategory] was created on-the-fly. The created cache will use a provider-specific default configuration: make sure you defined one. You can disable this warning by setting 'hibernate.javax.cache.missing_cache_strategy' to 'create'.\n","stream":"stdout","time":"2021-12-09T00:21:06.494987064Z"}
{"log":"2021-12-09T00:21:08.528+0000 level=\"ERROR\" logger=\"o.a.t.j.p.ConnectionPool\"  Unable to create initial connections of pool.\n","stream":"stdout","time":"2021-12-09T00:21:08.550041517Z"}
{"log":"com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n","stream":"stdout","time":"2021-12-09T00:21:08.55009326Z"}
{"log":"\n","stream":"stdout","time":"2021-12-09T00:21:08.550099946Z"}
{"log":"The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n","stream":"stdout","time":"2021-12-09T00:21:08.550103803Z"}
{"log":"\u0009at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)\n","stream":"stdout","time":"2021-12-09T00:21:08.550108134Z"}
{"log":"\u0009at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)\n","stream":"stdout","time":"2021-12-09T00:21:08.550112584Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)\n","stream":"stdout","time":"2021-12-09T00:21:08.550117884Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.\u003cinit\u003e(ConnectionImpl.java:456)\n","stream":"stdout","time":"2021-12-09T00:21:08.550122051Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)\n","stream":"stdout","time":"2021-12-09T00:21:08.550126172Z"}
{"log":"\u0009at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)\n","stream":"stdout","time":"2021-12-09T00:21:08.550129752Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:347)\n","stream":"stdout","time":"2021-12-09T00:21:08.550133446Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:228)\n","stream":"stdout","time":"2021-12-09T00:21:08.550137242Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:769)\n","stream":"stdout","time":"2021-12-09T00:21:08.550141013Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:697)\n","stream":"stdout","time":"2021-12-09T00:21:08.550145146Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:496)\n","stream":"stdout","time":"2021-12-09T00:21:08.550149141Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.ConnectionPool.\u003cinit\u003e(ConnectionPool.java:154)\n","stream":"stdout","time":"2021-12-09T00:21:08.550153054Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:121)\n","stream":"stdout","time":"2021-12-09T00:21:08.550157272Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:110)\n","stream":"stdout","time":"2021-12-09T00:21:08.550161478Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:134)\n","stream":"stdout","time":"2021-12-09T00:21:08.550165495Z"}
{"log":"\u0009at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)\n","stream":"stdout","time":"2021-12-09T00:21:08.550169635Z"}
{"log":"\u0009at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)\n","stream":"stdout","time":"2021-12-09T00:21:08.550174049Z"}
{"log":"\u0009at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)\n","stream":"stdout","time":"2021-12-09T00:21:08.550178572Z"}
{"log":"\u0009at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)\n","stream":"stdout","time":"2021-12-09T00:21:08.550183924Z"}
{"log":"\u0009at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)\n","stream":"stdout","time":"2021-12-09T00:21:08.550200339Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n","stream":"stdout","time":"2021-12-09T00:21:08.5502047Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n","stream":"stdout","time":"2021-12-09T00:21:08.550209303Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n","stream":"stdout","time":"2021-12-09T00:21:08.55021338Z"}
{"log":"\u0009at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)\n","stream":"stdout","time":"2021-12-09T00:21:08.550217447Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)\n","stream":"stdout","time":"2021-12-09T00:21:08.550221682Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)\n","stream":"stdout","time":"2021-12-09T00:21:08.550226075Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n","stream":"stdout","time":"2021-12-09T00:21:08.550230055Z"}
{"log":"\u0009at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.\u003cinit\u003e(InFlightMetadataCollectorImpl.java:176)\n","stream":"stdout","time":"2021-12-09T00:21:08.550234488Z"}
{"log":"\u0009at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)\n","stream":"stdout","time":"2021-12-09T00:21:08.550238862Z"}
{"log":"\u0009at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)\n","stream":"stdout","time":"2021-12-09T00:21:08.550243074Z"}
{"log":"\u0009at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:479)\n","stream":"stdout","time":"2021-12-09T00:21:08.550247072Z"}
{"log":"\u0009at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:85)\n","stream":"stdout","time":"2021-12-09T00:21:08.550251129Z"}
{"log":"\u0009at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:709)\n","stream":"stdout","time":"2021-12-09T00:21:08.550255094Z"}
{"log":"\u0009at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:744)\n","stream":"stdout","time":"2021-12-09T00:21:08.550259075Z"}
{"log":"\u0009at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:616)\n","stream":"stdout","time":"2021-12-09T00:21:08.55026298Z"}
{"log":"\u0009at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:600)\n","stream":"stdout","time":"2021-12-09T00:21:08.550267266Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)\n","stream":"stdout","time":"2021-12-09T00:21:08.550271632Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)\n","stream":"stdout","time":"2021-12-09T00:21:08.550276194Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)\n","stream":"stdout","time":"2021-12-09T00:21:08.550280803Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:08.550285135Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:08.550289909Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:08.550299608Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:08.550304035Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:08.550308506Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:08.550312763Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1598)\n","stream":"stdout","time":"2021-12-09T00:21:08.550317111Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1562)\n","stream":"stdout","time":"2021-12-09T00:21:08.550321603Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1451)\n","stream":"stdout","time":"2021-12-09T00:21:08.550326099Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1338)\n","stream":"stdout","time":"2021-12-09T00:21:08.550330304Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:08.550334474Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stdout","time":"2021-12-09T00:21:08.550338218Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stdout","time":"2021-12-09T00:21:08.550342377Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stdout","time":"2021-12-09T00:21:08.550346534Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stdout","time":"2021-12-09T00:21:08.550351514Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stdout","time":"2021-12-09T00:21:08.550356146Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:08.550360435Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:08.550364529Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:08.550368646Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:08.550372887Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:08.550376976Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:08.550380725Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:08.55038697Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stdout","time":"2021-12-09T00:21:08.550391318Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:08.550395914Z"}
{"log":"\u0009at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)\n","stream":"stdout","time":"2021-12-09T00:21:08.550400123Z"}
{"log":"\u0009at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\n","stream":"stdout","time":"2021-12-09T00:21:08.550404522Z"}
{"log":"\u0009at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)\n","stream":"stdout","time":"2021-12-09T00:21:08.550408883Z"}
{"log":"\u0009at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\n","stream":"stdout","time":"2021-12-09T00:21:08.550412885Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)\n","stream":"stdout","time":"2021-12-09T00:21:08.550417527Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)\n","stream":"stdout","time":"2021-12-09T00:21:08.550422004Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:08.550426355Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:08.550430511Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:08.550434821Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:08.550439118Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:08.550443285Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:08.550447181Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stdout","time":"2021-12-09T00:21:08.550451354Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:08.550455481Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stdout","time":"2021-12-09T00:21:08.550459787Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stdout","time":"2021-12-09T00:21:08.550464146Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stdout","time":"2021-12-09T00:21:08.55048415Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stdout","time":"2021-12-09T00:21:08.550488815Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stdout","time":"2021-12-09T00:21:08.550495866Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:08.550500022Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:08.550504708Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:08.55050951Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:08.550513373Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:08.550517414Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:08.55052123Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:08.550525211Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stdout","time":"2021-12-09T00:21:08.550529381Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:08.550533789Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stdout","time":"2021-12-09T00:21:08.550538214Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stdout","time":"2021-12-09T00:21:08.550552898Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stdout","time":"2021-12-09T00:21:08.550557142Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stdout","time":"2021-12-09T00:21:08.550561338Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stdout","time":"2021-12-09T00:21:08.550565611Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:08.550570035Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:08.550574278Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:08.550578414Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:08.550582867Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:08.55058885Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:08.550595514Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:08.550599619Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stdout","time":"2021-12-09T00:21:08.550603626Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:08.550608012Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stdout","time":"2021-12-09T00:21:08.550612303Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stdout","time":"2021-12-09T00:21:08.550626022Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stdout","time":"2021-12-09T00:21:08.55062963Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stdout","time":"2021-12-09T00:21:08.55063321Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stdout","time":"2021-12-09T00:21:08.550637133Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:08.550640849Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:08.550644624Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:08.550648394Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:08.550651985Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:08.550655526Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:08.550658823Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)\n","stream":"stdout","time":"2021-12-09T00:21:08.550663086Z"}
{"log":"\u0009at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)\n","stream":"stdout","time":"2021-12-09T00:21:08.550666741Z"}
{"log":"\u0009at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)\n","stream":"stdout","time":"2021-12-09T00:21:08.550670445Z"}
{"log":"\u0009at com.touch.dropwizard.spring.SpringBundle.configureWebAppContext(SpringBundle.java:79)\n","stream":"stdout","time":"2021-12-09T00:21:08.550674028Z"}
{"log":"\u0009at com.touch.paylater.portalapi.application.configuration.dropwizard.PortalApiSpringBundle.configureWebAppContext(PortalApiSpringBundle.java:29)\n","stream":"stdout","time":"2021-12-09T00:21:08.550677464Z"}
{"log":"\u0009at com.touch.paylater.portalapi.application.configuration.dropwizard.PortalApiSpringBundle.configureWebAppContext(PortalApiSpringBundle.java:18)\n","stream":"stdout","time":"2021-12-09T00:21:08.550681249Z"}
{"log":"\u0009at com.touch.dropwizard.spring.SpringBundle.run(SpringBundle.java:56)\n","stream":"stdout","time":"2021-12-09T00:21:08.55068735Z"}
{"log":"\u0009at com.touch.dropwizard.spring.SpringBundle.run(SpringBundle.java:23)\n","stream":"stdout","time":"2021-12-09T00:21:08.550691122Z"}
{"log":"\u0009at io.dropwizard.setup.Bootstrap.run(Bootstrap.java:199)\n","stream":"stdout","time":"2021-12-09T00:21:08.550694805Z"}
{"log":"\u0009at io.dropwizard.cli.EnvironmentCommand.run(EnvironmentCommand.java:58)\n","stream":"stdout","time":"2021-12-09T00:21:08.550698395Z"}
{"log":"\u0009at io.dropwizard.cli.ConfiguredCommand.run(ConfiguredCommand.java:98)\n","stream":"stdout","time":"2021-12-09T00:21:08.550701702Z"}
{"log":"\u0009at io.dropwizard.cli.Cli.run(Cli.java:78)\n","stream":"stdout","time":"2021-12-09T00:21:08.550705143Z"}
{"log":"\u0009at io.dropwizard.Application.run(Application.java:94)\n","stream":"stdout","time":"2021-12-09T00:21:08.550708645Z"}
{"log":"\u0009at com.touch.paylater.portalapi.application.PortalApiApplication.main(PortalApiApplication.java:35)\n","stream":"stdout","time":"2021-12-09T00:21:08.550712227Z"}
{"log":"Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n","stream":"stdout","time":"2021-12-09T00:21:08.550715708Z"}
{"log":"\n","stream":"stdout","time":"2021-12-09T00:21:08.550719194Z"}
{"log":"The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n","stream":"stdout","time":"2021-12-09T00:21:08.550722292Z"}
{"log":"\u0009at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n","stream":"stdout","time":"2021-12-09T00:21:08.550725878Z"}
{"log":"\u0009at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:08.550729601Z"}
{"log":"\u0009at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:08.550732957Z"}
{"log":"\u0009at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:08.550736403Z"}
{"log":"\u0009at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)\n","stream":"stdout","time":"2021-12-09T00:21:08.550739822Z"}
{"log":"\u0009at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)\n","stream":"stdout","time":"2021-12-09T00:21:08.550743202Z"}
{"log":"\u0009at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)\n","stream":"stdout","time":"2021-12-09T00:21:08.55074681Z"}
{"log":"\u0009at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)\n","stream":"stdout","time":"2021-12-09T00:21:08.55075103Z"}
{"log":"\u0009at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)\n","stream":"stdout","time":"2021-12-09T00:21:08.550754585Z"}
{"log":"\u0009at com.mysql.cj.NativeSession.connect(NativeSession.java:144)\n","stream":"stdout","time":"2021-12-09T00:21:08.550758018Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956)\n","stream":"stdout","time":"2021-12-09T00:21:08.550761528Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826)\n","stream":"stdout","time":"2021-12-09T00:21:08.550765118Z"}
{"log":"\u0009... 128 common frames omitted\n","stream":"stdout","time":"2021-12-09T00:21:08.550768901Z"}
{"log":"Caused by: java.net.UnknownHostException: mysqlro: Name does not resolve\n","stream":"stdout","time":"2021-12-09T00:21:08.550772548Z"}
{"log":"\u0009at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)\n","stream":"stdout","time":"2021-12-09T00:21:08.550775963Z"}
{"log":"\u0009at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:08.550781063Z"}
{"log":"\u0009at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:08.550784536Z"}
{"log":"\u0009at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:08.550788045Z"}
{"log":"\u0009at java.base/java.net.InetAddress.getAllByName0(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:08.550791606Z"}
{"log":"\u0009at java.base/java.net.InetAddress.getAllByName(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:08.550795072Z"}
{"log":"\u0009at java.base/java.net.InetAddress.getAllByName(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:08.550798534Z"}
{"log":"\u0009at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:132)\n","stream":"stdout","time":"2021-12-09T00:21:08.550802035Z"}
{"log":"\u0009at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)\n","stream":"stdout","time":"2021-12-09T00:21:08.550805552Z"}
{"log":"\u0009... 131 common frames omitted\n","stream":"stdout","time":"2021-12-09T00:21:08.550809156Z"}
{"log":"2021-12-09T00:21:08.570+0000 level=\"WARN\" logger=\"o.h.e.j.e.i.JdbcEnvironmentInitiator\"  HHH000342: Could not obtain connection to query metadata\n","stream":"stdout","time":"2021-12-09T00:21:08.571277503Z"}
{"log":"com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n","stream":"stdout","time":"2021-12-09T00:21:08.571325641Z"}
{"log":"\n","stream":"stdout","time":"2021-12-09T00:21:08.571332026Z"}
{"log":"The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n","stream":"stdout","time":"2021-12-09T00:21:08.571335829Z"}
{"log":"\u0009at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)\n","stream":"stdout","time":"2021-12-09T00:21:08.571339989Z"}
{"log":"\u0009at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)\n","stream":"stdout","time":"2021-12-09T00:21:08.571344297Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)\n","stream":"stdout","time":"2021-12-09T00:21:08.571387839Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.\u003cinit\u003e(ConnectionImpl.java:456)\n","stream":"stdout","time":"2021-12-09T00:21:08.571401401Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)\n","stream":"stdout","time":"2021-12-09T00:21:08.571405653Z"}
{"log":"\u0009at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)\n","stream":"stdout","time":"2021-12-09T00:21:08.571409143Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:347)\n","stream":"stdout","time":"2021-12-09T00:21:08.571412875Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:228)\n","stream":"stdout","time":"2021-12-09T00:21:08.571416491Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:769)\n","stream":"stdout","time":"2021-12-09T00:21:08.571420291Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:697)\n","stream":"stdout","time":"2021-12-09T00:21:08.571424269Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:496)\n","stream":"stdout","time":"2021-12-09T00:21:08.571428022Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.ConnectionPool.\u003cinit\u003e(ConnectionPool.java:154)\n","stream":"stdout","time":"2021-12-09T00:21:08.571431664Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:121)\n","stream":"stdout","time":"2021-12-09T00:21:08.571435311Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:110)\n","stream":"stdout","time":"2021-12-09T00:21:08.571438944Z"}
{"log":"\u0009at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:134)\n","stream":"stdout","time":"2021-12-09T00:21:08.571449959Z"}
{"log":"\u0009at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)\n","stream":"stdout","time":"2021-12-09T00:21:08.571453346Z"}
{"log":"\u0009at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)\n","stream":"stdout","time":"2021-12-09T00:21:08.571457072Z"}
{"log":"\u0009at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)\n","stream":"stdout","time":"2021-12-09T00:21:08.571460309Z"}
{"log":"\u0009at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)\n","stream":"stdout","time":"2021-12-09T00:21:08.571466557Z"}
{"log":"\u0009at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)\n","stream":"stdout","time":"2021-12-09T00:21:08.571470226Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n","stream":"stdout","time":"2021-12-09T00:21:08.571474113Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n","stream":"stdout","time":"2021-12-09T00:21:08.571477728Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n","stream":"stdout","time":"2021-12-09T00:21:08.57148123Z"}
{"log":"\u0009at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)\n","stream":"stdout","time":"2021-12-09T00:21:08.571484876Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)\n","stream":"stdout","time":"2021-12-09T00:21:08.571488447Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)\n","stream":"stdout","time":"2021-12-09T00:21:08.571491708Z"}
{"log":"\u0009at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n","stream":"stdout","time":"2021-12-09T00:21:08.571495047Z"}
{"log":"\u0009at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.\u003cinit\u003e(InFlightMetadataCollectorImpl.java:176)\n","stream":"stdout","time":"2021-12-09T00:21:08.571498326Z"}
{"log":"\u0009at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)\n","stream":"stdout","time":"2021-12-09T00:21:08.57150237Z"}
{"log":"\u0009at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:86)\n","stream":"stdout","time":"2021-12-09T00:21:08.571505673Z"}
{"log":"\u0009at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:479)\n","stream":"stdout","time":"2021-12-09T00:21:08.571508879Z"}
{"log":"\u0009at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:85)\n","stream":"stdout","time":"2021-12-09T00:21:08.571512157Z"}
{"log":"\u0009at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:709)\n","stream":"stdout","time":"2021-12-09T00:21:08.57151539Z"}
{"log":"\u0009at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:744)\n","stream":"stdout","time":"2021-12-09T00:21:08.571518766Z"}
{"log":"\u0009at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:616)\n","stream":"stdout","time":"2021-12-09T00:21:08.57152227Z"}
{"log":"\u0009at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:600)\n","stream":"stdout","time":"2021-12-09T00:21:08.571525894Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)\n","stream":"stdout","time":"2021-12-09T00:21:08.571630226Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)\n","stream":"stdout","time":"2021-12-09T00:21:08.571663226Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)\n","stream":"stdout","time":"2021-12-09T00:21:08.571669351Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:08.571674237Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:08.571679123Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:08.57168576Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:08.571690535Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:08.571694948Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:08.571699418Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1598)\n","stream":"stdout","time":"2021-12-09T00:21:08.571704054Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1562)\n","stream":"stdout","time":"2021-12-09T00:21:08.571708717Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1451)\n","stream":"stdout","time":"2021-12-09T00:21:08.571713407Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1338)\n","stream":"stdout","time":"2021-12-09T00:21:08.571718211Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:08.571722965Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stdout","time":"2021-12-09T00:21:08.571727362Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stdout","time":"2021-12-09T00:21:08.571731969Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stdout","time":"2021-12-09T00:21:08.571736552Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stdout","time":"2021-12-09T00:21:08.571741962Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stdout","time":"2021-12-09T00:21:08.571747048Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:08.571751791Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:08.571762434Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:08.571766908Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:08.571771275Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:08.571775818Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:08.571780434Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:08.57178483Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stdout","time":"2021-12-09T00:21:08.571789704Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:08.571794345Z"}
{"log":"\u0009at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)\n","stream":"stdout","time":"2021-12-09T00:21:08.57179911Z"}
{"log":"\u0009at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)\n","stream":"stdout","time":"2021-12-09T00:21:08.571803914Z"}
{"log":"\u0009at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)\n","stream":"stdout","time":"2021-12-09T00:21:08.571808742Z"}
{"log":"\u0009at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\n","stream":"stdout","time":"2021-12-09T00:21:08.571813233Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)\n","stream":"stdout","time":"2021-12-09T00:21:08.571818649Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)\n","stream":"stdout","time":"2021-12-09T00:21:08.571832668Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:08.571836799Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:08.571840982Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:08.57184499Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:08.571849133Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:08.571853022Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:08.571856955Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stdout","time":"2021-12-09T00:21:08.571862857Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:08.571866922Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stdout","time":"2021-12-09T00:21:08.571871014Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stdout","time":"2021-12-09T00:21:08.571874952Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stdout","time":"2021-12-09T00:21:08.571878884Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stdout","time":"2021-12-09T00:21:08.57188295Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stdout","time":"2021-12-09T00:21:08.571887039Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:08.57189143Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:08.571896062Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:08.571900331Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:08.571904317Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:08.571908319Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:08.571912049Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:08.571915944Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stdout","time":"2021-12-09T00:21:08.571919983Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:08.571924Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stdout","time":"2021-12-09T00:21:08.571928206Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stdout","time":"2021-12-09T00:21:08.571932834Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stdout","time":"2021-12-09T00:21:08.571938486Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stdout","time":"2021-12-09T00:21:08.571942479Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stdout","time":"2021-12-09T00:21:08.571946702Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:08.571952836Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:08.571957026Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:08.571961287Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:08.571964869Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:08.571968911Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:08.571972909Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:08.571976932Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stdout","time":"2021-12-09T00:21:08.571980876Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:08.571984933Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stdout","time":"2021-12-09T00:21:08.571989009Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stdout","time":"2021-12-09T00:21:08.571992994Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stdout","time":"2021-12-09T00:21:08.571997007Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stdout","time":"2021-12-09T00:21:08.572000953Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stdout","time":"2021-12-09T00:21:08.572005105Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:08.572009155Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:08.572013269Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:08.572017404Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:08.572021348Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:08.572025393Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:08.57202935Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)\n","stream":"stdout","time":"2021-12-09T00:21:08.572035361Z"}
{"log":"\u0009at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)\n","stream":"stdout","time":"2021-12-09T00:21:08.572039569Z"}
{"log":"\u0009at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)\n","stream":"stdout","time":"2021-12-09T00:21:08.572043659Z"}
{"log":"\u0009at com.touch.dropwizard.spring.SpringBundle.configureWebAppContext(SpringBundle.java:79)\n","stream":"stdout","time":"2021-12-09T00:21:08.572047654Z"}
{"log":"\u0009at com.touch.paylater.portalapi.application.configuration.dropwizard.PortalApiSpringBundle.configureWebAppContext(PortalApiSpringBundle.java:29)\n","stream":"stdout","time":"2021-12-09T00:21:08.572051559Z"}
{"log":"\u0009at com.touch.paylater.portalapi.application.configuration.dropwizard.PortalApiSpringBundle.configureWebAppContext(PortalApiSpringBundle.java:18)\n","stream":"stdout","time":"2021-12-09T00:21:08.572055773Z"}
{"log":"\u0009at com.touch.dropwizard.spring.SpringBundle.run(SpringBundle.java:56)\n","stream":"stdout","time":"2021-12-09T00:21:08.572059839Z"}
{"log":"\u0009at com.touch.dropwizard.spring.SpringBundle.run(SpringBundle.java:23)\n","stream":"stdout","time":"2021-12-09T00:21:08.572063681Z"}
{"log":"\u0009at io.dropwizard.setup.Bootstrap.run(Bootstrap.java:199)\n","stream":"stdout","time":"2021-12-09T00:21:08.57206747Z"}
{"log":"\u0009at io.dropwizard.cli.EnvironmentCommand.run(EnvironmentCommand.java:58)\n","stream":"stdout","time":"2021-12-09T00:21:08.572071264Z"}
{"log":"\u0009at io.dropwizard.cli.ConfiguredCommand.run(ConfiguredCommand.java:98)\n","stream":"stdout","time":"2021-12-09T00:21:08.572075043Z"}
{"log":"\u0009at io.dropwizard.cli.Cli.run(Cli.java:78)\n","stream":"stdout","time":"2021-12-09T00:21:08.572078839Z"}
{"log":"\u0009at io.dropwizard.Application.run(Application.java:94)\n","stream":"stdout","time":"2021-12-09T00:21:08.572082585Z"}
{"log":"\u0009at com.touch.paylater.portalapi.application.PortalApiApplication.main(PortalApiApplication.java:35)\n","stream":"stdout","time":"2021-12-09T00:21:08.572086346Z"}
{"log":"Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n","stream":"stdout","time":"2021-12-09T00:21:08.572090339Z"}
{"log":"\n","stream":"stdout","time":"2021-12-09T00:21:08.572094345Z"}
{"log":"The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n","stream":"stdout","time":"2021-12-09T00:21:08.572097886Z"}
{"log":"\u0009at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n","stream":"stdout","time":"2021-12-09T00:21:08.572101951Z"}
{"log":"\u0009at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:08.572105806Z"}
{"log":"\u0009at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:08.572109728Z"}
{"log":"\u0009at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:08.572113545Z"}
{"log":"\u0009at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)\n","stream":"stdout","time":"2021-12-09T00:21:08.572117592Z"}
{"log":"\u0009at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)\n","stream":"stdout","time":"2021-12-09T00:21:08.572121523Z"}
{"log":"\u0009at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)\n","stream":"stdout","time":"2021-12-09T00:21:08.572125403Z"}
{"log":"\u0009at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)\n","stream":"stdout","time":"2021-12-09T00:21:08.572129747Z"}
{"log":"\u0009at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)\n","stream":"stdout","time":"2021-12-09T00:21:08.572135439Z"}
{"log":"\u0009at com.mysql.cj.NativeSession.connect(NativeSession.java:144)\n","stream":"stdout","time":"2021-12-09T00:21:08.572139419Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956)\n","stream":"stdout","time":"2021-12-09T00:21:08.572143287Z"}
{"log":"\u0009at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826)\n","stream":"stdout","time":"2021-12-09T00:21:08.572147194Z"}
{"log":"\u0009... 128 common frames omitted\n","stream":"stdout","time":"2021-12-09T00:21:08.572151052Z"}
{"log":"Caused by: java.net.UnknownHostException: mysqlro: Name does not resolve\n","stream":"stdout","time":"2021-12-09T00:21:08.572154799Z"}
{"log":"\u0009at java.base/java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)\n","stream":"stdout","time":"2021-12-09T00:21:08.572158529Z"}
{"log":"\u0009at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:08.572162317Z"}
{"log":"\u0009at java.base/java.net.InetAddress.getAddressesFromNameService(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:08.572166149Z"}
{"log":"\u0009at java.base/java.net.InetAddress$NameServiceAddresses.get(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:08.572170214Z"}
{"log":"\u0009at java.base/java.net.InetAddress.getAllByName0(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:08.572174244Z"}
{"log":"\u0009at java.base/java.net.InetAddress.getAllByName(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:08.572177983Z"}
{"log":"\u0009at java.base/java.net.InetAddress.getAllByName(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:08.572181816Z"}
{"log":"\u0009at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:132)\n","stream":"stdout","time":"2021-12-09T00:21:08.572185555Z"}
{"log":"\u0009at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)\n","stream":"stdout","time":"2021-12-09T00:21:08.572189499Z"}
{"log":"\u0009... 131 common frames omitted\n","stream":"stdout","time":"2021-12-09T00:21:08.572193397Z"}
{"log":"2021-12-09T00:21:09.082+0000 level=\"WARN\" logger=\"o.h.m.RootClass\"  HHH000038: Composite-id class does not override equals(): com.touch.paylater.core.domain.SuspiciousMatterReport$IdAndTime\n","stream":"stdout","time":"2021-12-09T00:21:09.083029882Z"}
{"log":"2021-12-09T00:21:09.082+0000 level=\"WARN\" logger=\"o.h.m.RootClass\"  HHH000039: Composite-id class does not override hashCode(): com.touch.paylater.core.domain.SuspiciousMatterReport$IdAndTime\n","stream":"stdout","time":"2021-12-09T00:21:09.083085687Z"}
{"log":"2021-12-09T00:21:11.221+0000 level=\"INFO\" logger=\"c.l.s.s.L.DataSource\"  Enabling streaming API\n","stream":"stdout","time":"2021-12-09T00:21:11.221882532Z"}
{"log":"2021-12-09T00:21:11.245+0000 level=\"INFO\" logger=\"c.l.s.s.L.DataSource\"  Starting EventSource client using URI: https://stream.launchdarkly.com/all\n","stream":"stdout","time":"2021-12-09T00:21:11.245435906Z"}
{"log":"2021-12-09T00:21:11.247+0000 level=\"INFO\" logger=\"c.l.s.s.LDClient\"  Waiting up to 5000 milliseconds for LaunchDarkly client to start...\n","stream":"stdout","time":"2021-12-09T00:21:11.247741959Z"}
{"log":"2021-12-09T00:21:12.400+0000 level=\"INFO\" logger=\"c.l.s.s.L.DataSource\"  Connected to EventSource stream.\n","stream":"stdout","time":"2021-12-09T00:21:12.400493872Z"}
{"log":"2021-12-09T00:21:13.103+0000 level=\"INFO\" logger=\"c.l.s.s.L.DataSource\"  Initialized LaunchDarkly client.\n","stream":"stdout","time":"2021-12-09T00:21:13.103793134Z"}
{"log":"2021-12-09T00:21:17.375+0000 level=\"WARN\" logger=\"o.s.w.c.s.AnnotationConfigWebApplicationContext\"  Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'paymentLock' defined in URL [jar:file:/app/libs/core-21.22.41118.jar!/com/touch/paylater/core/infrastructure/PaymentLock.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'distributedLock' defined in URL [jar:file:/app/libs/common-lock-21.22.41118.jar!/com/touch/paylater/common/lock/DistributedLock.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in com.touch.paylater.core.dao.config.RedissonSpringConfig: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is java.net.UnknownHostException: failed to resolve 'redis' after 2 queries \n","stream":"stdout","time":"2021-12-09T00:21:17.375861458Z"}
{"log":"2021-12-09T00:21:17.380+0000 level=\"INFO\" logger=\"c.l.s.s.LDClient\"  Closing LaunchDarkly Client\n","stream":"stdout","time":"2021-12-09T00:21:17.3803784Z"}
{"log":"2021-12-09T00:21:17.381+0000 level=\"INFO\" logger=\"c.l.s.s.L.DataSource\"  Closing LaunchDarkly StreamProcessor\n","stream":"stdout","time":"2021-12-09T00:21:17.382089442Z"}
{"log":"2021-12-09T00:21:17.515+0000 level=\"ERROR\" logger=\"c.t.d.s.SpringBundle\"  Error starting spring context\n","stream":"stdout","time":"2021-12-09T00:21:17.516099393Z"}
{"log":"org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'paymentLock' defined in URL [jar:file:/app/libs/core-21.22.41118.jar!/com/touch/paylater/core/infrastructure/PaymentLock.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'distributedLock' defined in URL [jar:file:/app/libs/common-lock-21.22.41118.jar!/com/touch/paylater/common/lock/DistributedLock.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in com.touch.paylater.core.dao.config.RedissonSpringConfig: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is java.net.UnknownHostException: failed to resolve 'redis' after 2 queries \n","stream":"stdout","time":"2021-12-09T00:21:17.516149504Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)\n","stream":"stdout","time":"2021-12-09T00:21:17.516160096Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stdout","time":"2021-12-09T00:21:17.516165049Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stdout","time":"2021-12-09T00:21:17.516169475Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stdout","time":"2021-12-09T00:21:17.516174221Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:17.51617893Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:17.516194393Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:17.51620828Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:17.516213226Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:17.516216624Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:17.516220045Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)\n","stream":"stdout","time":"2021-12-09T00:21:17.516223275Z"}
{"log":"\u0009at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)\n","stream":"stdout","time":"2021-12-09T00:21:17.51622698Z"}
{"log":"\u0009at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)\n","stream":"stdout","time":"2021-12-09T00:21:17.516230309Z"}
{"log":"\u0009at com.touch.dropwizard.spring.SpringBundle.configureWebAppContext(SpringBundle.java:79)\n","stream":"stdout","time":"2021-12-09T00:21:17.516233661Z"}
{"log":"\u0009at com.touch.paylater.portalapi.application.configuration.dropwizard.PortalApiSpringBundle.configureWebAppContext(PortalApiSpringBundle.java:29)\n","stream":"stdout","time":"2021-12-09T00:21:17.51623697Z"}
{"log":"\u0009at com.touch.paylater.portalapi.application.configuration.dropwizard.PortalApiSpringBundle.configureWebAppContext(PortalApiSpringBundle.java:18)\n","stream":"stdout","time":"2021-12-09T00:21:17.516240681Z"}
{"log":"\u0009at com.touch.dropwizard.spring.SpringBundle.run(SpringBundle.java:56)\n","stream":"stdout","time":"2021-12-09T00:21:17.516244355Z"}
{"log":"\u0009at com.touch.dropwizard.spring.SpringBundle.run(SpringBundle.java:23)\n","stream":"stdout","time":"2021-12-09T00:21:17.516247953Z"}
{"log":"\u0009at io.dropwizard.setup.Bootstrap.run(Bootstrap.java:199)\n","stream":"stdout","time":"2021-12-09T00:21:17.51625112Z"}
{"log":"\u0009at io.dropwizard.cli.EnvironmentCommand.run(EnvironmentCommand.java:58)\n","stream":"stdout","time":"2021-12-09T00:21:17.516254297Z"}
{"log":"\u0009at io.dropwizard.cli.ConfiguredCommand.run(ConfiguredCommand.java:98)\n","stream":"stdout","time":"2021-12-09T00:21:17.51625743Z"}
{"log":"\u0009at io.dropwizard.cli.Cli.run(Cli.java:78)\n","stream":"stdout","time":"2021-12-09T00:21:17.516260949Z"}
{"log":"\u0009at io.dropwizard.Application.run(Application.java:94)\n","stream":"stdout","time":"2021-12-09T00:21:17.516264218Z"}
{"log":"\u0009at com.touch.paylater.portalapi.application.PortalApiApplication.main(PortalApiApplication.java:35)\n","stream":"stdout","time":"2021-12-09T00:21:17.516267448Z"}
{"log":"Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'distributedLock' defined in URL [jar:file:/app/libs/common-lock-21.22.41118.jar!/com/touch/paylater/common/lock/DistributedLock.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in com.touch.paylater.core.dao.config.RedissonSpringConfig: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is java.net.UnknownHostException: failed to resolve 'redis' after 2 queries \n","stream":"stdout","time":"2021-12-09T00:21:17.516271231Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)\n","stream":"stdout","time":"2021-12-09T00:21:17.516276993Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stdout","time":"2021-12-09T00:21:17.516284165Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stdout","time":"2021-12-09T00:21:17.516288165Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stdout","time":"2021-12-09T00:21:17.516291951Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:17.516296035Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:17.516300116Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:17.516303623Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:17.516307171Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:17.516310915Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:17.516314212Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:17.516317896Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stdout","time":"2021-12-09T00:21:17.516321662Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:17.51632584Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stdout","time":"2021-12-09T00:21:17.516329293Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stdout","time":"2021-12-09T00:21:17.516332947Z"}
{"log":"\u0009... 23 common frames omitted\n","stream":"stdout","time":"2021-12-09T00:21:17.516336222Z"}
{"log":"Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in com.touch.paylater.core.dao.config.RedissonSpringConfig: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is java.net.UnknownHostException: failed to resolve 'redis' after 2 queries \n","stream":"stdout","time":"2021-12-09T00:21:17.516339526Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)\n","stream":"stdout","time":"2021-12-09T00:21:17.516344189Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)\n","stream":"stdout","time":"2021-12-09T00:21:17.516347434Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)\n","stream":"stdout","time":"2021-12-09T00:21:17.516351079Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)\n","stream":"stdout","time":"2021-12-09T00:21:17.516356542Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stdout","time":"2021-12-09T00:21:17.516360177Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stdout","time":"2021-12-09T00:21:17.516363876Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stdout","time":"2021-12-09T00:21:17.516367961Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stdout","time":"2021-12-09T00:21:17.516371808Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stdout","time":"2021-12-09T00:21:17.516375393Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stdout","time":"2021-12-09T00:21:17.516379472Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stdout","time":"2021-12-09T00:21:17.5163833Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stdout","time":"2021-12-09T00:21:17.51638684Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stdout","time":"2021-12-09T00:21:17.516390736Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stdout","time":"2021-12-09T00:21:17.516394644Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stdout","time":"2021-12-09T00:21:17.516398363Z"}
{"log":"\u0009... 37 common frames omitted\n","stream":"stdout","time":"2021-12-09T00:21:17.516402298Z"}
{"log":"Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is java.net.UnknownHostException: failed to resolve 'redis' after 2 queries \n","stream":"stdout","time":"2021-12-09T00:21:17.516405756Z"}
{"log":"\u0009at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)\n","stream":"stdout","time":"2021-12-09T00:21:17.51641029Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\n","stream":"stdout","time":"2021-12-09T00:21:17.516414224Z"}
{"log":"\u0009... 51 common frames omitted\n","stream":"stdout","time":"2021-12-09T00:21:17.516418029Z"}
{"log":"Caused by: java.net.UnknownHostException: failed to resolve 'redis' after 2 queries \n","stream":"stdout","time":"2021-12-09T00:21:17.51642137Z"}
{"log":"\u0009at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1014)\n","stream":"stdout","time":"2021-12-09T00:21:17.51642538Z"}
{"log":"\u0009at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:967)\n","stream":"stdout","time":"2021-12-09T00:21:17.516429006Z"}
{"log":"\u0009at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:414)\n","stream":"stdout","time":"2021-12-09T00:21:17.516432852Z"}
{"log":"\u0009at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:938)\n","stream":"stdout","time":"2021-12-09T00:21:17.516436668Z"}
{"log":"\u0009at io.netty.resolver.dns.DnsResolveContext.access$700(DnsResolveContext.java:63)\n","stream":"stdout","time":"2021-12-09T00:21:17.516442858Z"}
{"log":"\u0009at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:467)\n","stream":"stdout","time":"2021-12-09T00:21:17.51644651Z"}
{"log":"\u0009at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)\n","stream":"stdout","time":"2021-12-09T00:21:17.516450501Z"}
{"log":"\u0009at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)\n","stream":"stdout","time":"2021-12-09T00:21:17.516454132Z"}
{"log":"\u0009at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)\n","stream":"stdout","time":"2021-12-09T00:21:17.516458508Z"}
{"log":"\u0009at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)\n","stream":"stdout","time":"2021-12-09T00:21:17.516462236Z"}
{"log":"\u0009at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)\n","stream":"stdout","time":"2021-12-09T00:21:17.516465552Z"}
{"log":"\u0009at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)\n","stream":"stdout","time":"2021-12-09T00:21:17.51646931Z"}
{"log":"\u0009at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)\n","stream":"stdout","time":"2021-12-09T00:21:17.51647362Z"}
{"log":"\u0009at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:201)\n","stream":"stdout","time":"2021-12-09T00:21:17.516477594Z"}
{"log":"\u0009at io.netty.resolver.dns.DnsQueryContext.finish(DnsQueryContext.java:193)\n","stream":"stdout","time":"2021-12-09T00:21:17.51648132Z"}
{"log":"\u0009at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1301)\n","stream":"stdout","time":"2021-12-09T00:21:17.516484832Z"}
{"log":"\u0009at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n","stream":"stdout","time":"2021-12-09T00:21:17.516488761Z"}
{"log":"\u0009at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n","stream":"stdout","time":"2021-12-09T00:21:17.51649267Z"}
{"log":"\u0009at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n","stream":"stdout","time":"2021-12-09T00:21:17.516496344Z"}
{"log":"\u0009at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)\n","stream":"stdout","time":"2021-12-09T00:21:17.516500274Z"}
{"log":"\u0009at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n","stream":"stdout","time":"2021-12-09T00:21:17.516504Z"}
{"log":"\u0009at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n","stream":"stdout","time":"2021-12-09T00:21:17.51650813Z"}
{"log":"\u0009at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n","stream":"stdout","time":"2021-12-09T00:21:17.516513472Z"}
{"log":"\u0009at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\n","stream":"stdout","time":"2021-12-09T00:21:17.516517344Z"}
{"log":"\u0009at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n","stream":"stdout","time":"2021-12-09T00:21:17.516521054Z"}
{"log":"\u0009at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n","stream":"stdout","time":"2021-12-09T00:21:17.516525143Z"}
{"log":"\u0009at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\n","stream":"stdout","time":"2021-12-09T00:21:17.516528522Z"}
{"log":"\u0009at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)\n","stream":"stdout","time":"2021-12-09T00:21:17.516532384Z"}
{"log":"\u0009at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\n","stream":"stdout","time":"2021-12-09T00:21:17.51653816Z"}
{"log":"\u0009at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\n","stream":"stdout","time":"2021-12-09T00:21:17.51654232Z"}
{"log":"\u0009at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\n","stream":"stdout","time":"2021-12-09T00:21:17.516546082Z"}
{"log":"\u0009at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\n","stream":"stdout","time":"2021-12-09T00:21:17.516549656Z"}
{"log":"\u0009at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\n","stream":"stdout","time":"2021-12-09T00:21:17.516553446Z"}
{"log":"\u0009at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n","stream":"stdout","time":"2021-12-09T00:21:17.516556916Z"}
{"log":"\u0009at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n","stream":"stdout","time":"2021-12-09T00:21:17.516560691Z"}
{"log":"\u0009at java.base/java.lang.Thread.run(Unknown Source)\n","stream":"stdout","time":"2021-12-09T00:21:17.516564422Z"}
{"log":"org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'paymentLock' defined in URL [jar:file:/app/libs/core-21.22.41118.jar!/com/touch/paylater/core/infrastructure/PaymentLock.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'distributedLock' defined in URL [jar:file:/app/libs/common-lock-21.22.41118.jar!/com/touch/paylater/common/lock/DistributedLock.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in com.touch.paylater.core.dao.config.RedissonSpringConfig: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is java.net.UnknownHostException: failed to resolve 'redis' after 2 queries \n","stream":"stderr","time":"2021-12-09T00:21:17.517229937Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)\n","stream":"stderr","time":"2021-12-09T00:21:17.517258839Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stderr","time":"2021-12-09T00:21:17.517264624Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stderr","time":"2021-12-09T00:21:17.51726973Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stderr","time":"2021-12-09T00:21:17.51727468Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stderr","time":"2021-12-09T00:21:17.517279203Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stderr","time":"2021-12-09T00:21:17.517283265Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stderr","time":"2021-12-09T00:21:17.51728859Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stderr","time":"2021-12-09T00:21:17.517294743Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stderr","time":"2021-12-09T00:21:17.517305037Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stderr","time":"2021-12-09T00:21:17.517310014Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)\n","stream":"stderr","time":"2021-12-09T00:21:17.517314917Z"}
{"log":"\u0009at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)\n","stream":"stderr","time":"2021-12-09T00:21:17.51732859Z"}
{"log":"\u0009at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)\n","stream":"stderr","time":"2021-12-09T00:21:17.517333283Z"}
{"log":"\u0009at com.touch.dropwizard.spring.SpringBundle.configureWebAppContext(SpringBundle.java:79)\n","stream":"stderr","time":"2021-12-09T00:21:17.517691818Z"}
{"log":"\u0009at com.touch.paylater.portalapi.application.configuration.dropwizard.PortalApiSpringBundle.configureWebAppContext(PortalApiSpringBundle.java:29)\n","stream":"stderr","time":"2021-12-09T00:21:17.517704854Z"}
{"log":"\u0009at com.touch.paylater.portalapi.application.configuration.dropwizard.PortalApiSpringBundle.configureWebAppContext(PortalApiSpringBundle.java:18)\n","stream":"stderr","time":"2021-12-09T00:21:17.517709697Z"}
{"log":"\u0009at com.touch.dropwizard.spring.SpringBundle.run(SpringBundle.java:56)\n","stream":"stderr","time":"2021-12-09T00:21:17.517714143Z"}
{"log":"\u0009at com.touch.dropwizard.spring.SpringBundle.run(SpringBundle.java:23)\n","stream":"stderr","time":"2021-12-09T00:21:17.517717975Z"}
{"log":"\u0009at io.dropwizard.setup.Bootstrap.run(Bootstrap.java:199)\n","stream":"stderr","time":"2021-12-09T00:21:17.517721963Z"}
{"log":"\u0009at io.dropwizard.cli.EnvironmentCommand.run(EnvironmentCommand.java:58)\n","stream":"stderr","time":"2021-12-09T00:21:17.517726083Z"}
{"log":"\u0009at io.dropwizard.cli.ConfiguredCommand.run(ConfiguredCommand.java:98)\n","stream":"stderr","time":"2021-12-09T00:21:17.517730376Z"}
{"log":"\u0009at io.dropwizard.cli.Cli.run(Cli.java:78)\n","stream":"stderr","time":"2021-12-09T00:21:17.51773439Z"}
{"log":"\u0009at io.dropwizard.Application.run(Application.java:94)\n","stream":"stderr","time":"2021-12-09T00:21:17.517738379Z"}
{"log":"\u0009at com.touch.paylater.portalapi.application.PortalApiApplication.main(PortalApiApplication.java:35)\n","stream":"stderr","time":"2021-12-09T00:21:17.517742494Z"}
{"log":"Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'distributedLock' defined in URL [jar:file:/app/libs/common-lock-21.22.41118.jar!/com/touch/paylater/common/lock/DistributedLock.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in com.touch.paylater.core.dao.config.RedissonSpringConfig: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is java.net.UnknownHostException: failed to resolve 'redis' after 2 queries \n","stream":"stderr","time":"2021-12-09T00:21:17.517746626Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)\n","stream":"stderr","time":"2021-12-09T00:21:17.517753494Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)\n","stream":"stderr","time":"2021-12-09T00:21:17.517757588Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)\n","stream":"stderr","time":"2021-12-09T00:21:17.517762699Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\n","stream":"stderr","time":"2021-12-09T00:21:17.517770661Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stderr","time":"2021-12-09T00:21:17.517775036Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stderr","time":"2021-12-09T00:21:17.517778978Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stderr","time":"2021-12-09T00:21:17.517783176Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stderr","time":"2021-12-09T00:21:17.517787333Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stderr","time":"2021-12-09T00:21:17.517792166Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stderr","time":"2021-12-09T00:21:17.517796532Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stderr","time":"2021-12-09T00:21:17.517800932Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stderr","time":"2021-12-09T00:21:17.517805005Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stderr","time":"2021-12-09T00:21:17.51780945Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stderr","time":"2021-12-09T00:21:17.517813396Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stderr","time":"2021-12-09T00:21:17.51781773Z"}
{"log":"\u0009... 23 more\n","stream":"stderr","time":"2021-12-09T00:21:17.517821849Z"}
{"log":"Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in com.touch.paylater.core.dao.config.RedissonSpringConfig: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is java.net.UnknownHostException: failed to resolve 'redis' after 2 queries \n","stream":"stderr","time":"2021-12-09T00:21:17.517826136Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)\n","stream":"stderr","time":"2021-12-09T00:21:17.517831889Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)\n","stream":"stderr","time":"2021-12-09T00:21:17.517836094Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)\n","stream":"stderr","time":"2021-12-09T00:21:17.517840064Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)\n","stream":"stderr","time":"2021-12-09T00:21:17.51784459Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\n","stream":"stderr","time":"2021-12-09T00:21:17.51785094Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\n","stream":"stderr","time":"2021-12-09T00:21:17.51785511Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n","stream":"stderr","time":"2021-12-09T00:21:17.517859475Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n","stream":"stderr","time":"2021-12-09T00:21:17.517863438Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n","stream":"stderr","time":"2021-12-09T00:21:17.517867775Z"}
{"log":"\u0009at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n","stream":"stderr","time":"2021-12-09T00:21:17.517871951Z"}
{"log":"\u0009at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n","stream":"stderr","time":"2021-12-09T00:21:17.517875993Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)\n","stream":"stderr","time":"2021-12-09T00:21:17.517880324Z"}
{"log":"\u0009at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)\n","stream":"stderr","time":"2021-12-09T00:21:17.517884637Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)\n","stream":"stderr","time":"2021-12-09T00:21:17.517888982Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n","stream":"stderr","time":"2021-12-09T00:21:17.517892965Z"}
{"log":"\u0009... 37 more\n","stream":"stderr","time":"2021-12-09T00:21:17.517897087Z"}
{"log":"Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is java.net.UnknownHostException: failed to resolve 'redis' after 2 queries \n","stream":"stderr","time":"2021-12-09T00:21:17.517901854Z"}
{"log":"\u0009at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)\n","stream":"stderr","time":"2021-12-09T00:21:17.517906475Z"}
{"log":"\u0009at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\n","stream":"stderr","time":"2021-12-09T00:21:17.51791066Z"}
{"log":"\u0009... 51 more\n","stream":"stderr","time":"2021-12-09T00:21:17.517914639Z"}
{"log":"Caused by: java.net.UnknownHostException: failed to resolve 'redis' after 2 queries \n","stream":"stderr","time":"2021-12-09T00:21:17.51791843Z"}
{"log":"\u0009at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1014)\n","stream":"stderr","time":"2021-12-09T00:21:17.517922314Z"}
{"log":"\u0009at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:967)\n","stream":"stderr","time":"2021-12-09T00:21:17.517926375Z"}
{"log":"\u0009at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:414)\n","stream":"stderr","time":"2021-12-09T00:21:17.517931921Z"}
{"log":"\u0009at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:938)\n","stream":"stderr","time":"2021-12-09T00:21:17.517935784Z"}
{"log":"\u0009at io.netty.resolver.dns.DnsResolveContext.access$700(DnsResolveContext.java:63)\n","stream":"stderr","time":"2021-12-09T00:21:17.517939491Z"}
{"log":"\u0009at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:467)\n","stream":"stderr","time":"2021-12-09T00:21:17.517942921Z"}
{"log":"\u0009at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)\n","stream":"stderr","time":"2021-12-09T00:21:17.517948138Z"}
{"log":"\u0009at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)\n","stream":"stderr","time":"2021-12-09T00:21:17.518352579Z"}
{"log":"\u0009at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)\n","stream":"stderr","time":"2021-12-09T00:21:17.518372779Z"}
{"log":"\u0009at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)\n","stream":"stderr","time":"2021-12-09T00:21:17.518377571Z"}
{"log":"\u0009at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)\n","stream":"stderr","time":"2021-12-09T00:21:17.518381965Z"}
{"log":"\u0009at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)\n","stream":"stderr","time":"2021-12-09T00:21:17.51838707Z"}
{"log":"\u0009at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)\n","stream":"stderr","time":"2021-12-09T00:21:17.518391165Z"}
{"log":"\u0009at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:201)\n","stream":"stderr","time":"2021-12-09T00:21:17.518394916Z"}
{"log":"\u0009at io.netty.resolver.dns.DnsQueryContext.finish(DnsQueryContext.java:193)\n","stream":"stderr","time":"2021-12-09T00:21:17.518398724Z"}
{"log":"\u0009at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1301)\n","stream":"stderr","time":"2021-12-09T00:21:17.518402514Z"}
{"log":"\u0009at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n","stream":"stderr","time":"2021-12-09T00:21:17.518406405Z"}
{"log":"\u0009at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n","stream":"stderr","time":"2021-12-09T00:21:17.518410253Z"}
{"log":"\u0009at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n","stream":"stderr","time":"2021-12-09T00:21:17.518414153Z"}
{"log":"\u0009at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)\n","stream":"stderr","time":"2021-12-09T00:21:17.518417915Z"}
{"log":"\u0009at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n","stream":"stderr","time":"2021-12-09T00:21:17.518421653Z"}
{"log":"\u0009at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n","stream":"stderr","time":"2021-12-09T00:21:17.518425589Z"}
{"log":"\u0009at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n","stream":"stderr","time":"2021-12-09T00:21:17.518429509Z"}
{"log":"\u0009at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\n","stream":"stderr","time":"2021-12-09T00:21:17.5184333Z"}
{"log":"\u0009at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n","stream":"stderr","time":"2021-12-09T00:21:17.51843736Z"}
{"log":"\u0009at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n","stream":"stderr","time":"2021-12-09T00:21:17.518442634Z"}
{"log":"\u0009at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\n","stream":"stderr","time":"2021-12-09T00:21:17.518446668Z"}
{"log":"\u0009at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)\n","stream":"stderr","time":"2021-12-09T00:21:17.518450457Z"}
{"log":"\u0009at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\n","stream":"stderr","time":"2021-12-09T00:21:17.518454977Z"}
{"log":"\u0009at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\n","stream":"stderr","time":"2021-12-09T00:21:17.518458735Z"}
{"log":"\u0009at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\n","stream":"stderr","time":"2021-12-09T00:21:17.518467659Z"}
{"log":"\u0009at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\n","stream":"stderr","time":"2021-12-09T00:21:17.518471461Z"}
{"log":"\u0009at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\n","stream":"stderr","time":"2021-12-09T00:21:17.518475226Z"}
{"log":"\u0009at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n","stream":"stderr","time":"2021-12-09T00:21:17.518478994Z"}
{"log":"\u0009at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n","stream":"stderr","time":"2021-12-09T00:21:17.518482717Z"}
{"log":"\u0009at java.base/java.lang.Thread.run(Unknown Source)\n","stream":"stderr","time":"2021-12-09T00:21:17.518486481Z"}
{"log":"2021-12-09T00:21:17,519+0000 [6 11] com.newrelic.agent.core.CoreServiceImpl INFO: JVM is shutting down\n","stream":"stdout","time":"2021-12-09T00:21:17.519519323Z"}
{"log":"2021-12-09T00:21:17,783+0000 [6 11] com.newrelic.agent.core.CoreServiceImpl INFO: New Relic Agent has shutdown\n","stream":"stdout","time":"2021-12-09T00:21:17.78323972Z"}
